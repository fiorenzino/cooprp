{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.footer.component.ts","webpack:///./src/app/app.menu.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.profile.component.css","webpack:///./src/app/app.profile.component.ts","webpack:///./src/app/app.routes.module.ts","webpack:///./src/app/app.topbar.component.ts","webpack:///./src/app/commons/abstract-list-component.ts","webpack:///./src/app/commons/abstract-service.ts","webpack:///./src/app/commons/models/search.ts","webpack:///./src/app/commons/models/utente.ts","webpack:///./src/app/components/companyconfigurations/companyConfigurations-list.component.html","webpack:///./src/app/components/companyconfigurations/companyConfigurations-list.component.ts","webpack:///./src/app/components/companyconfigurations/companyConfigurations.component.html","webpack:///./src/app/components/companyconfigurations/companyConfigurations.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/languages/languages-list.component.html","webpack:///./src/app/components/languages/languages-list.component.ts","webpack:///./src/app/components/languages/languages.component.html","webpack:///./src/app/components/languages/languages.component.ts","webpack:///./src/app/components/locations/locations-list.component.html","webpack:///./src/app/components/locations/locations-list.component.ts","webpack:///./src/app/components/locations/locations.component.html","webpack:///./src/app/components/locations/locations.component.ts","webpack:///./src/app/components/main-app/main-app.component.css","webpack:///./src/app/components/main-app/main-app.component.html","webpack:///./src/app/components/main-app/main-app.component.ts","webpack:///./src/app/components/notifications/notifications-list.component.html","webpack:///./src/app/components/notifications/notifications-list.component.ts","webpack:///./src/app/components/notifications/notifications.component.html","webpack:///./src/app/components/notifications/notifications.component.ts","webpack:///./src/app/components/operations/operations-list.component.html","webpack:///./src/app/components/operations/operations-list.component.ts","webpack:///./src/app/components/operations/operations.component.html","webpack:///./src/app/components/operations/operations.component.ts","webpack:///./src/app/components/workshifts/workshifts-list.component.html","webpack:///./src/app/components/workshifts/workshifts-list.component.ts","webpack:///./src/app/components/workshifts/workshifts.component.html","webpack:///./src/app/components/workshifts/workshifts.component.ts","webpack:///./src/app/constants/app-constants.ts","webpack:///./src/app/constants/constants.ts","webpack:///./src/app/models/companyConfiguration.ts","webpack:///./src/app/models/language.ts","webpack:///./src/app/models/location.ts","webpack:///./src/app/models/notification.ts","webpack:///./src/app/models/operation.ts","webpack:///./src/app/models/workshift.ts","webpack:///./src/app/modules/core.module.ts","webpack:///./src/app/modules/my-shared.module.ts","webpack:///./src/app/router-guards/user-resolve-guard.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/companyConfigurations.service.ts","webpack:///./src/app/services/http-interceptors/basic-http-interceptor.ts","webpack:///./src/app/services/languages.service.ts","webpack:///./src/app/services/locations.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/notifications.service.ts","webpack:///./src/app/services/operations.service.ts","webpack:///./src/app/services/top-menu.service.ts","webpack:///./src/app/services/workshifts.service.ts","webpack:///./src/app/shared/integer-input.ts","webpack:///./src/app/shared/manageErrorCode.ts","webpack:///./src/app/shared/number-input.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"layout-wrapper\\\" [ngClass]=\\\"{'layout-compact':layoutCompact}\\\">\\n\\n    <div #layoutContainer class=\\\"layout-container\\\"\\n         [ngClass]=\\\"{'menu-layout-static': !isOverlay(),\\n            'menu-layout-overlay': isOverlay(),\\n            'layout-menu-overlay-active': overlayMenuActive,\\n            'menu-layout-horizontal': isHorizontal(),\\n            'layout-menu-static-inactive': staticMenuDesktopInactive,\\n            'layout-menu-static-active': staticMenuMobileActive}\\\">\\n\\n        <app-topbar></app-topbar>\\n\\n        <div class=\\\"layout-menu\\\" [ngClass]=\\\"{'layout-menu-dark':darkMenu}\\\" (click)=\\\"onMenuClick($event)\\\">\\n            <div #layoutMenuScroller class=\\\"nano\\\">\\n                <div class=\\\"nano-content menu-scroll-content\\\">\\n                    <inline-profile *ngIf=\\\"profileMode=='inline'&&!isHorizontal()\\\" [utente]=\\\"utente\\\"></inline-profile>\\n                    <app-menu [reset]=\\\"resetMenu\\\"></app-menu>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"layout-main\\\">\\n            <div class=\\\"ui-g-12 ui-g-nopad\\\" style=\\\"min-height: calc(100vh - 137px);\\\">\\n                <router-outlet></router-outlet>\\n            </div>\\n            <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                <app-footer></app-footer>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"","import {AfterViewInit, Component, ElementRef, OnInit, Renderer, ViewChild} from \"@angular/core\";\nimport {Utente} from \"./commons/models/utente\";\nimport {AuthenticationService} from \"./services/authentication.service\";\n\ndeclare var jQuery: any;\n\nenum MenuOrientation {\n    STATIC,\n    OVERLAY,\n    HORIZONTAL\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\n    layoutCompact: boolean = true;\n    layoutMode: MenuOrientation = MenuOrientation.STATIC;\n    darkMenu: boolean = false;\n    profileMode: string = 'inline';\n    rotateMenuButton: boolean;\n    topbarMenuActive: boolean;\n    overlayMenuActive: boolean;\n    staticMenuDesktopInactive: boolean;\n    staticMenuMobileActive: boolean;\n    layoutContainer: HTMLDivElement;\n    layoutMenuScroller: HTMLDivElement;\n    modal: HTMLDivElement;\n    menuClick: boolean;\n    topbarItemClick: boolean;\n    activeTopbarItem: any;\n    documentClickListener: Function;\n    resetMenu: boolean;\n\n    utente: Utente;\n\n    @ViewChild('layoutContainer') layourContainerViewChild: ElementRef;\n    @ViewChild('layoutMenuScroller') layoutMenuScrollerViewChild: ElementRef;\n\n    constructor(public renderer: Renderer,\n                private authenticationService: AuthenticationService) {\n        this.utente = new Utente();\n    }\n\n    ngOnInit() {\n        this.authenticationService.getUser().subscribe(\n            utente => {\n                if (utente == null || utente.ruoli == null || utente.ruoli.length == 0) {\n                    console.log(\"should not happen. we have CAS!\");\n                }\n                else {\n                    this.utente = utente;\n                }\n            },\n            error => {\n            }\n        );\n    }\n\n    ngAfterViewInit() {\n        this.layoutContainer = <HTMLDivElement> this.layourContainerViewChild.nativeElement;\n        this.layoutMenuScroller = <HTMLDivElement> this.layoutMenuScrollerViewChild.nativeElement;\n\n        //hides the horizontal submenus or top menu if outside is clicked\n        this.documentClickListener = this.renderer.listenGlobal('body', 'click', (event) => {\n            if (!this.topbarItemClick) {\n                this.activeTopbarItem = null;\n                this.topbarMenuActive = false;\n            }\n\n            if (!this.menuClick) {\n                this.resetMenu = true;\n            }\n\n            this.topbarItemClick = false;\n            this.menuClick = false;\n        });\n\n        setTimeout(() => {\n            jQuery(this.layoutMenuScroller).nanoScroller({flash: true});\n        }, 10);\n    }\n\n    onMenuButtonClick(event) {\n        this.rotateMenuButton = !this.rotateMenuButton;\n        this.topbarMenuActive = false;\n\n        if (this.layoutMode === MenuOrientation.OVERLAY) {\n            this.overlayMenuActive = !this.overlayMenuActive;\n\n            if (this.overlayMenuActive)\n                this.enableModal();\n            else\n                this.disableModal();\n        }\n        else {\n            if (this.isDesktop()) {\n                this.staticMenuDesktopInactive = !this.staticMenuDesktopInactive;\n            }\n            else {\n                if (this.staticMenuMobileActive) {\n                    this.staticMenuMobileActive = false;\n                    this.disableModal();\n                }\n                else {\n                    this.staticMenuMobileActive = true;\n                    this.enableModal();\n                }\n            }\n        }\n\n        event.preventDefault();\n    }\n\n    onMenuClick($event) {\n        this.menuClick = true;\n        this.resetMenu = false;\n\n        if (!this.isHorizontal()) {\n            setTimeout(() => {\n                jQuery(this.layoutMenuScroller).nanoScroller();\n            }, 500);\n        }\n    }\n\n    onTopbarMenuButtonClick(event) {\n        this.topbarItemClick = true;\n        this.topbarMenuActive = !this.topbarMenuActive;\n\n        if (this.overlayMenuActive || this.staticMenuMobileActive) {\n            this.rotateMenuButton = false;\n            this.overlayMenuActive = false;\n            this.staticMenuMobileActive = false;\n            this.disableModal();\n        }\n    }\n\n    onTopbarItemClick(event, item) {\n        this.topbarItemClick = true;\n\n        if (this.activeTopbarItem === item)\n            this.activeTopbarItem = null;\n        else\n            this.activeTopbarItem = item;\n\n        event.preventDefault();\n    }\n\n    enableModal() {\n        this.modal = document.createElement(\"div\");\n        this.modal.className = 'layout-mask';\n        this.layoutContainer.appendChild(this.modal);\n    }\n\n    disableModal() {\n        if (this.modal) {\n            this.layoutContainer.removeChild(this.modal);\n        }\n    }\n\n    isTablet() {\n        let width = window.innerWidth;\n        return width <= 1024 && width > 640;\n    }\n\n    isDesktop() {\n        return window.innerWidth > 1024;\n    }\n\n    isMobile() {\n        return window.innerWidth <= 640;\n    }\n\n    isOverlay() {\n        return this.layoutMode === MenuOrientation.OVERLAY;\n    }\n\n    isHorizontal() {\n        return this.layoutMode === MenuOrientation.HORIZONTAL;\n    }\n\n    changeToStaticMenu() {\n        this.layoutMode = MenuOrientation.STATIC;\n    }\n\n    changeToOverlayMenu() {\n        this.layoutMode = MenuOrientation.OVERLAY;\n    }\n\n    changeToHorizontalMenu() {\n        this.layoutMode = MenuOrientation.HORIZONTAL;\n    }\n\n    ngOnDestroy() {\n        this.disableModal();\n\n        if (this.documentClickListener) {\n            this.documentClickListener();\n        }\n\n        jQuery(this.layoutMenuScroller).nanoScroller({flash: true});\n    }\n}\n","import {Component, OnInit} from \"@angular/core\";\nimport {APP_VERSION} from \"./constants/constants\";\nimport * as moment from \"moment/moment\";\n\n@Component({\n    selector: 'app-footer',\n    template: `\n        <div class=\"footer\">\n            <div class=\"card clearfix CardNoMarginBottom\">\n                <span class=\"footer-text-left\">FATTURE PA - {{year}} v. {{appVersion}}</span>\n                <span class=\"footer-text-right\"><span class=\"ui-icon ui-icon-copyright\"></span>  <span>www.coopservice.it</span></span>\n            </div>\n        </div>\n    `\n})\nexport class AppFooter implements OnInit {\n\n    public appVersion: string = APP_VERSION;\n    public year: string;\n\n    ngOnInit() {\n        this.year = moment().format('YYYY');\n    }\n\n}\n","import { Component, forwardRef, Inject, Input, OnInit } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { MenuItem } from 'primeng/primeng';\nimport { AppComponent } from './app.component';\nimport {Utente} from \"./commons/models/utente\";\n\n@Component({\n    selector: 'app-menu',\n    template: `\n        <ul app-submenu [item]=\"model\" root=\"true\" class=\"ultima-menu ultima-main-menu clearfix\" [reset]=\"reset\"></ul>\n    `\n})\nexport class AppMenuComponent implements OnInit {\n\n    @Input() reset: boolean;\n\n    @Input() utente: Utente;\n\n    model: MenuItem[];\n\n    constructor( @Inject(forwardRef(() => AppComponent)) public app: AppComponent) {\n    }\n\n    ngOnInit() {\n\n        this.buildMenu();\n    }\n\n    private buildMenu() {\n        this.model = [];\n\n        let menuItem: MenuItem = null;\n        let menuSubItem: MenuItem = null;\n        let menuSubItems: MenuItem[];\n\n        {\n            menuItem = { label: 'Home', icon: 'home', routerLink: ['/home'] };\n            this.model.push(menuItem);\n        }\n\n        {\n            menuSubItems = [];\n            menuItem = { label: 'Configurazione Aziende', icon: 'settings', items: [] };\n            this.model.push(menuItem);\n            menuSubItem = { label: 'lista', icon: 'list', routerLink: ['/companyconfigurations/list'] };\n            menuSubItems.push(menuSubItem);\n\n            menuItem.items = menuSubItems;\n        }\n\n        {\n            menuSubItems = [];\n            menuItem = { label: 'Lingue', icon: 'language', items: [] };\n            this.model.push(menuItem);\n            menuSubItem = { label: 'lista', icon: 'list', routerLink: ['/languages/list'] };\n            menuSubItems.push(menuSubItem);\n\n            menuItem.items = menuSubItems;\n        }\n        {\n            menuSubItems = [];\n            menuItem = { label: 'Location', icon: 'location_on', items: [] };\n            this.model.push(menuItem);\n            menuSubItem = { label: 'lista', icon: 'list', routerLink: ['/locations/list'] };\n            menuSubItems.push(menuSubItem);\n\n            menuItem.items = menuSubItems;\n        }\n\n        {\n            menuSubItems = [];\n            menuItem = { label: 'Notifiche', icon: 'send', items: [] };\n            this.model.push(menuItem);\n            menuSubItem = { label: 'lista', icon: 'list', routerLink: ['/notifications/list'] };\n            menuSubItems.push(menuSubItem);\n\n            menuItem.items = menuSubItems;\n        }\n        {\n            menuSubItems = [];\n            menuItem = { label: 'Operazioni', icon: 'edit', items: [] };\n            this.model.push(menuItem);\n            menuSubItem = { label: 'lista', icon: 'list', routerLink: ['/operations/list'] };\n            menuSubItems.push(menuSubItem);\n\n            menuItem.items = menuSubItems;\n        }\n        {\n            menuSubItems = [];\n            menuItem = { label: 'Turni', icon: 'group_work', items: [] };\n            this.model.push(menuItem);\n            menuSubItem = { label: 'lista', icon: 'list', routerLink: ['/workshifts/list'] };\n            menuSubItems.push(menuSubItem);\n\n            menuItem.items = menuSubItems;\n        }\n        {\n            menuItem = { label: 'Logout', icon: 'power_settings_new', routerLink: ['/logout-cas'] };\n            this.model.push(menuItem);\n        }\n\n    }\n\n    changeTheme(theme) {\n        const themeLink: HTMLLinkElement = <HTMLLinkElement>document.getElementById('theme-css');\n        const layoutLink: HTMLLinkElement = <HTMLLinkElement>document.getElementById('layout-css');\n\n        themeLink.href = 'assets/theme/theme-' + theme + '.css';\n        layoutLink.href = 'assets/layout/css/layout-' + theme + '.css';\n    }\n}\n\n@Component({\n    selector: '[app-submenu]',\n    template: `\n        <ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"(root ? item : item.items)\">\n            <ng-container *ngIf=\"!child.hidden\">\n                <li [ngClass]=\"{'active-menuitem': isActive(i)}\" >\n                    <a [href]=\"child.url||'#'\" (click)=\"itemClick($event,child,i)\" class=\"ripplelink\" *ngIf=\"!child.routerLink\">\n                        <i class=\"material-icons\">{{child.icon}}</i>\n                        <span>{{child.label}}</span>\n                        <i class=\"material-icons\" *ngIf=\"child.items\">keyboard_arrow_down</i>\n                    </a>\n\n                    <a (click)=\"itemClick($event,child,i)\" class=\"ripplelink\" *ngIf=\"child.routerLink\"\n                        [routerLink]=\"child.routerLink\" routerLinkActive=\"active-menuitem-routerlink\" [routerLinkActiveOptions]=\"{exact: true}\">\n                        <i class=\"material-icons\">{{child.icon}}</i>\n                        <span>{{child.label}}</span>\n                        <i class=\"material-icons\" *ngIf=\"child.items\">keyboard_arrow_down</i>\n                    </a>\n                    <ul app-submenu [item]=\"child\" *ngIf=\"child.items\" [@children]=\"isActive(i) ? 'visible' : 'hidden'\"></ul>\n                </li>\n            </ng-container>\n        </ng-template>\n    `,\n    animations: [\n        trigger('children', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n            transition('hidden => visible', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class AppSubMenu {\n\n    @Input() item: MenuItem;\n\n    @Input() root: boolean;\n\n    _reset: boolean;\n\n    activeIndex: number;\n\n    constructor( @Inject(forwardRef(() => AppComponent)) public app: AppComponent, public router: Router, public location: Location) {\n    }\n\n    itemClick(event: Event, item: MenuItem, index: number) {\n        if (item.disabled) {\n            event.preventDefault();\n            return true;\n        }\n\n        this.activeIndex = (this.activeIndex === index) ? null : index;\n\n        // execute command\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n\n        // prevent hash change\n        if (item.items || (!item.url && !item.routerLink)) {\n            event.preventDefault();\n        }\n        // hide menu\n        if (!item.items) {\n            if (this.app.isHorizontal()) {\n                this.app.resetMenu = true;\n            } else {\n                this.app.resetMenu = false;\n            }\n            this.app.overlayMenuActive = false;\n            this.app.staticMenuMobileActive = false;\n        }\n\n    }\n\n    isActive(index: number): boolean {\n        return this.activeIndex === index;\n    }\n\n    @Input() get reset(): boolean {\n        return this._reset;\n    }\n\n    set reset(val: boolean) {\n        this._reset = val;\n\n        if (this._reset && this.app.isHorizontal()) {\n            this.activeIndex = null;\n        }\n    }\n}","import {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {AppRoutingModule} from \"./app.routes.module\";\nimport {MySharedModule} from \"./modules/my-shared.module\";\nimport {CoreModule} from \"./modules/core.module\";\nimport {BasicHttpInterceptor} from \"./services/http-interceptors/basic-http-interceptor\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {TableModule} from \"primeng/table\";\nimport {\n    ButtonModule,\n    CalendarModule, CheckboxModule,\n    ConfirmDialogModule, DataScrollerModule,\n    DialogModule,\n    DropdownModule,\n    GrowlModule,\n    InputSwitchModule,\n    InputTextareaModule,\n    InputTextModule,\n    MessagesModule, OverlayPanelModule,\n    PanelModule, ProgressBarModule,\n    ProgressSpinnerModule, SelectButtonModule, SharedModule,\n    SpinnerModule,\n    TabViewModule, ToggleButtonModule\n} from \"primeng/primeng\";\nimport {MainAppComponent} from \"./components/main-app/main-app.component\";\nimport {InlineProfileComponent} from \"./app.profile.component\";\nimport {AppTopBar} from \"./app.topbar.component\";\nimport {AppFooter} from \"./app.footer.component\";\nimport {AppMenuComponent, AppSubMenu} from \"./app.menu.component\";\nimport {LanguagesListComponent} from \"./components/languages/languages-list.component\";\nimport {LanguagesService} from \"./services/languages.service\";\nimport {LanguagesComponent} from \"./components/languages/languages.component\";\nimport {WorkshiftsService} from \"./services/workshifts.service\";\nimport {OperationsService} from \"./services/operations.service\";\nimport {NotificationsService} from \"./services/notifications.service\";\nimport {CompanyConfigurationsService} from \"./services/companyConfigurations.service\";\nimport {LocationsService} from \"./services/locations.service\";\nimport {CompanyConfigurationsListComponent} from \"./components/companyconfigurations/companyConfigurations-list.component\";\nimport {CompanyConfigurationsComponent} from \"./components/companyconfigurations/companyConfigurations.component\";\nimport {LocationsListComponent} from \"./components/locations/locations-list.component\";\nimport {LocationsComponent} from \"./components/locations/locations.component\";\nimport {OperationsListComponent} from \"./components/operations/operations-list.component\";\nimport {WorkshiftsListComponent} from \"./components/workshifts/workshifts-list.component\";\nimport {WorkshiftsComponent} from \"./components/workshifts/workshifts.component\";\nimport {OperationsComponent} from \"./components/operations/operations.component\";\nimport {NotificationsListComponent} from \"./components/notifications/notifications-list.component\";\nimport {NotificationsComponent} from \"./components/notifications/notifications.component\";\nimport {NumberInput} from \"./shared/number-input\";\nimport {IntegerInput} from \"./shared/integer-input\";\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tMainAppComponent,\n\t\tHomeComponent,\n        AppTopBar,\n        AppFooter,\n\t\tInlineProfileComponent,\n        AppMenuComponent,\n        AppSubMenu,\n        NumberInput,\n        IntegerInput,\n\n        CompanyConfigurationsListComponent,\n        CompanyConfigurationsComponent,\n\n        LanguagesListComponent,\n        LanguagesComponent,\n\n        LocationsListComponent,\n        LocationsComponent,\n\n        OperationsListComponent,\n        OperationsComponent,\n\n        NotificationsListComponent,\n        NotificationsComponent,\n\n        WorkshiftsListComponent,\n        WorkshiftsComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tBrowserAnimationsModule,\n\t\tMySharedModule,\n\t\tAppRoutingModule,\n\t\tCoreModule.forRoot(),\n\t\tTableModule,\n\t\tCalendarModule,\n\n        SpinnerModule,\n        ProgressSpinnerModule,\n        MessagesModule,\n        CalendarModule,\n        ConfirmDialogModule,\n        DropdownModule,\n        InputTextModule,\n        InputTextareaModule,\n        SharedModule,\n        TableModule,\n        DialogModule,\n        GrowlModule,\n        PanelModule,\n        TabViewModule,\n        InputSwitchModule,\n        ButtonModule,\n        ProgressBarModule,\n        DataScrollerModule,\n        CheckboxModule,\n        OverlayPanelModule,\n        SelectButtonModule,\n        ToggleButtonModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: BasicHttpInterceptor,\n\t\t\tmulti: true\n\t\t},\n        CompanyConfigurationsService,\n        LanguagesService,\n        LocationsService,\n        NotificationsService,\n        OperationsService,\n        WorkshiftsService\n\t],\n\tentryComponents: [\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \".profile {\\n    height: 100px !important;\\n    padding-top: 1em;\\n}\"","import {Component, Input} from \"@angular/core\";\nimport {trigger, state, style, transition, animate} from \"@angular/animations\";\nimport {Utente} from \"./commons/models/utente\";\n\n@Component({\n    selector: 'inline-profile',\n    styleUrls: ['./app.profile.component.css'],\n    template: `\n        <div class=\"profile\" [ngClass]=\"{'profile-expanded':active}\">\n            <div class=\"ui-g-12\">Benvenuto</div>\n            <a href=\"#\" (click)=\"onClick($event)\">\n                <span class=\"profile-name\">{{utente.nome}}</span>\n                <i class=\"material-icons\">keyboard_arrow_down</i>\n            </a>\n        </div>\n\n        <ul class=\"ultima-menu profile-menu\" [@menu]=\"active ? 'visible' : 'hidden'\">\n            <li role=\"menuitem\">\n                <a href=\"#\" class=\"ripplelink CurDefault\">\n                    <i class=\"material-icons\">security</i>\n                    <span>ruolo {{utente.ruoli}}</span>\n                </a>\n            </li>\n        </ul>\n    `,\n    animations: [\n        trigger('menu', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n            transition('hidden => visible', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n        ])\n    ]\n})\nexport class InlineProfileComponent {\n\n    @Input() utente: Utente;\n\n    active: boolean;\n\n    onClick(event) {\n        this.active = !this.active;\n        event.preventDefault();\n    }\n}","import {PreloadAllModules, RouterModule, Routes} from \"@angular/router\";\nimport {NgModule} from \"@angular/core\";\nimport {UserResolveGuard} from \"./router-guards/user-resolve-guard\";\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {MainAppComponent} from \"./components/main-app/main-app.component\";\nimport {LanguagesComponent} from \"./components/languages/languages.component\";\nimport {LanguagesListComponent} from \"./components/languages/languages-list.component\";\nimport {LocationsComponent} from \"./components/locations/locations.component\";\nimport {LocationsListComponent} from \"./components/locations/locations-list.component\";\nimport {NotificationsComponent} from \"./components/notifications/notifications.component\";\nimport {NotificationsListComponent} from \"./components/notifications/notifications-list.component\";\nimport {OperationsComponent} from \"./components/operations/operations.component\";\nimport {OperationsListComponent} from \"./components/operations/operations-list.component\";\nimport {CompanyConfigurationsComponent} from \"./components/companyconfigurations/companyConfigurations.component\";\nimport {CompanyConfigurationsListComponent} from \"./components/companyconfigurations/companyConfigurations-list.component\";\nimport {WorkshiftsListComponent} from \"./components/workshifts/workshifts-list.component\";\nimport {WorkshiftsComponent} from \"./components/workshifts/workshifts.component\";\n\nexport const routing: Routes = [\n\t{path: '', redirectTo: 'home', pathMatch: 'full'},\n\t{\n\t\tpath: '', component: MainAppComponent, resolve: {utente: UserResolveGuard},\n\t\tchildren: [\n\t\t\t{path: '', redirectTo: 'home', pathMatch: 'full'},\n\t\t\t{path: 'home', component: HomeComponent},\n\n\t\t\t// {path: 'free-page', loadChildren: './modules/free-page.module#FreePageModule'}\n            {\n                path: 'languages',\n                component: LanguagesComponent,\n                resolve: { user: UserResolveGuard },\n                children: [\n                    { path: '', redirectTo: '/languages/list', pathMatch: 'full' },\n                    { path: 'list', component: LanguagesListComponent },\n                ]\n            },\n\n            {\n                path: 'locations',\n                component: LocationsComponent,\n                resolve: { user: UserResolveGuard },\n                children: [\n                    { path: '', redirectTo: '/locations/list', pathMatch: 'full' },\n                    { path: 'list', component: LocationsListComponent },\n                ]\n            },\n            {\n                path: 'notifications',\n                component: NotificationsComponent,\n                resolve: { user: UserResolveGuard },\n                children: [\n                    { path: '', redirectTo: '/notifications/list', pathMatch: 'full' },\n                    { path: 'list', component: NotificationsListComponent },\n                ]\n            },\n\n            {\n                path: 'operations',\n                component: OperationsComponent,\n                resolve: { user: UserResolveGuard },\n                children: [\n                    { path: '', redirectTo: '/operations/list', pathMatch: 'full' },\n                    { path: 'list', component: OperationsListComponent },\n                ]\n            },\n            {\n                path: 'workshifts',\n                component: WorkshiftsComponent,\n                resolve: { user: UserResolveGuard },\n                children: [\n                    { path: '', redirectTo: '/workshifts/list', pathMatch: 'full' },\n                    { path: 'list', component: WorkshiftsListComponent },\n                ]\n            },\n            {\n                path: 'companyconfigurations',\n                component: CompanyConfigurationsComponent,\n                resolve: { user: UserResolveGuard },\n                children: [\n                    { path: '', redirectTo: '/companyconfigurations/list', pathMatch: 'full' },\n                    { path: 'list', component: CompanyConfigurationsListComponent },\n                ]\n            },\n\t\t]\n\t},\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routing, {useHash: true, preloadingStrategy: PreloadAllModules}),\n\t],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component,Inject,forwardRef} from '@angular/core';\nimport {AppComponent} from './app.component';\n\n@Component({\n    selector: 'app-topbar',\n    template: `\n        <div class=\"topbar clearfix\">\n            <div class=\"topbar-left\">\n                <div class=\"logo\"></div>\n            </div>\n\n            <div class=\"topbar-right\">\n                <a id=\"menu-button\" href=\"#\" (click)=\"app.onMenuButtonClick($event)\" [ngClass]=\"{'menu-button-rotate': app.rotateMenuButton}\">\n                    <i></i>\n                </a>\n\n                <a id=\"topbar-menu-button\" href=\"#\" (click)=\"app.onTopbarMenuButtonClick($event)\">\n                    <i class=\"material-icons\">menu</i>\n                </a>\n            </div>\n        </div>\n    `\n})\nexport class AppTopBar {\n\n    constructor(@Inject(forwardRef(() => AppComponent)) public app:AppComponent) {}\n\n}","import { DataTable, LazyLoadEvent, Message } from 'primeng/primeng';\nimport { AbstractService } from './abstract-service';\nimport { Router } from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { Table } from 'primeng/table';\nimport {manageErrorCode} from \"../shared/manageErrorCode\";\n\nexport abstract class AbstractListComponent<T> implements OnInit {\n  msgs: Message[] = [];\n\n  element: T = null;\n  model: T[] = [];\n  listSize: number;\n\n  protected firstReload: boolean;\n\n  public lang_it = {\n    closeText: 'Chiudi',\n    prevText: '&#x3C;Prec',\n    nextText: 'Succ&#x3E;',\n    currentText: 'Oggi',\n    monthNames: [\n      'Gennaio',\n      'Febbraio',\n      'Marzo',\n      'Aprile',\n      'Maggio',\n      'Giugno',\n      'Luglio',\n      'Agosto',\n      'Settembre',\n      'Ottobre',\n      'Novembre',\n      'Dicembre'\n    ],\n    monthNamesShort: [\n      'Gen',\n      'Feb',\n      'Mar',\n      'Apr',\n      'Mag',\n      'Giu',\n      'Lug',\n      'Ago',\n      'Set',\n      'Ott',\n      'Nov',\n      'Dic'\n    ],\n    dayNames: [\n      'Domenica',\n      'Lunedì',\n      'Martedì',\n      'Mercoledì',\n      'Giovedì',\n      'Venerdì',\n      'Sabato'\n    ],\n    dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'],\n    dayNamesMin: ['Do', 'Lu', 'Ma', 'Me', 'Gi', 'Ve', 'Sa'],\n    weekHeader: 'Sm',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  };\n\n  constructor(protected router: Router, public service: AbstractService<T>) {}\n\n  ngOnInit() {\n    this.service.buildSearch();\n    this.firstReload = true;\n  }\n\n  public loaddata(firstReload: boolean, datatable?: any) {\n    this.preLoaddata();\n    this.service.getList().subscribe(\n      model => {\n        this.model = [];\n        model.forEach(rec => {\n          this.model.push(this.toRec(rec));\n        });\n        this.listSize = this.service.listSize;\n        this.postLoaddata();\n      },\n      error => {\n        this.errorLoaddata(error);\n        manageErrorCode(error, this.msgs, this.router);\n      }\n    );\n  }\n\n  public preLoaddata() {}\n\n  public postLoaddata() {}\n\n  public errorLoaddata(error) {}\n\n  public lazyLoad(event: LazyLoadEvent, datatable?: any) {\n    if (!this.firstReload) {\n      this.service.search.startRow = event.first;\n    }\n    this.service.search.pageSize = event.rows;\n    this.preLoad(event, datatable);\n    this.loaddata(this.firstReload, datatable);\n    if (this.firstReload) {\n      this.firstReload = false;\n    }\n  }\n\n  protected preLoad(event: LazyLoadEvent, datatable?: any) {}\n\n  public refresh(datatable: Table) {\n    this.clearMsgs();\n    datatable.reset();\n  }\n\n  public reload(datatable: Table) {\n    this.service.search.startRow = 0;\n    this.refresh(datatable);\n  }\n\n  public reset(datatable: Table) {\n    this.service.buildSearch();\n    this.refresh(datatable);\n  }\n\n  public newElement(): T {\n    throw new Error('override this');\n  }\n\n  public onRowSelect(event: T, focusable: any) {\n    this.element = event;\n    if (focusable) {\n      focusable.focus();\n    }\n  }\n\n  public getNavigateOnView() {\n    return null;\n  }\n\n  public getNavigateOnEdit() {\n    return null;\n  }\n\n  public postSave() {}\n\n  public postUpdate() {}\n\n  public postDelete() {}\n\n  public save() {\n    this.clearMsgs();\n    this.service.persist(this.element).subscribe(\n      element => {\n        this.addInfo('Salvataggio completato con successo. ');\n        this.element = this.newElement();\n        this.loaddata(false);\n        this.postSave();\n      },\n      error => {\n        manageErrorCode(\n          'Impossibile completare il salvataggio. Si prega di riprovare',\n          this.msgs,\n          this.router\n        );\n      }\n    );\n  }\n\n  public undo(focusable: any) {\n    this.clearMsgs();\n    this.element = this.newElement();\n    if (focusable) {\n      focusable.focus();\n    }\n  }\n\n  public delete(element: T) {\n    this.clearMsgs();\n    this.service.delete(this.getId()).subscribe(\n      result => {\n        this.addInfo('Eliminazione completata con successo. ');\n        this.element = this.newElement();\n        this.loaddata(false);\n        this.postDelete();\n      },\n      error => {\n        manageErrorCode(\n          'Impossibile completare la eliminazione',\n          this.msgs,\n          this.router\n        );\n      }\n    );\n  }\n\n  public update() {\n    this.clearMsgs();\n    this.service.update(this.element).subscribe(\n      element => {\n        this.addInfo('Modifica completata con successo. ');\n        this.element = this.newElement();\n        this.loaddata(false);\n        this.postUpdate();\n      },\n      error => {\n        manageErrorCode(\n          'Impossibile completare la modifica',\n          this.msgs,\n          this.router\n        );\n      }\n    );\n  }\n\n  public addInfo(message: string) {\n    this.msgs.push({\n      severity: 'info',\n      summary: 'Informazioni: ',\n      detail: message\n    });\n  }\n\n  public addWarn(message: string) {\n    this.msgs.push({\n      severity: 'warn',\n      summary: 'Attenzione: ',\n      detail: message\n    });\n  }\n\n  public addError(error: any) {\n    console.error(error);\n    let message = 'Errore generico';\n    if ( error ) {\n      message = error;\n    }\n    if ( error['error'] ) {\n      message = error['error'];\n      if ( error['error']['msg'] ) {\n        message = error['error']['msg'];\n      }\n    }\n    this.msgs.push({ severity: 'error', summary: 'Errore: ', detail: message });\n  }\n\n  public clearMsgs() {\n    this.msgs = [];\n  }\n\n  abstract getId();\n\n  abstract toRec(obj: any): T;\n}\n","import 'rxjs/operator/catch';\nimport {HttpClient, HttpErrorResponse, HttpHeaders, HttpParams, HttpResponse} from '@angular/common/http';\nimport {Search} from './models/search';\nimport {catchError, map} from 'rxjs/operators';\nimport {Observable} from \"rxjs\";\n\nexport abstract class AbstractService<T> {\n\n    listSize: number;\n    search: Search<T>;\n\n    constructor(protected url: string, protected http: HttpClient) {\n        this.buildSearch();\n    }\n\n    public getList(): Observable<T []> {\n        let params = new HttpParams();\n        params = this.applyRestrictions(params, this.search);\n\n        return this.http.get<HttpResponse<T []>>(this.url, {\n            observe: 'response',\n            params: params\n        }).pipe(\n            map(res => {\n                    this.listSize = res.headers.get('listSize') != null ? +res.headers.get('listSize') : 0;\n                    const ts: any = res.body;\n                    this.postList(ts);\n                    return ts;\n                }\n            ),\n            catchError(this.handleError)\n        );\n    }\n\n    public getListSize(search: Search<T>): Observable<number> {\n        let params = new HttpParams();\n        search.startRow = 0;\n        search.pageSize = 1;\n        params = this.applyRestrictions(params, search);\n\n        return this.http.get(this.url + '/listSize', {\n            observe: 'response',\n            params: params\n        }).pipe(\n            map((res: HttpResponse<number>) => {\n                    return res.headers.get('listSize') != null ? +res.headers.get('listSize') : 0;\n                }\n            ),\n            catchError(this.handleError)\n        );\n    }\n\n    public size(): Observable<number> {\n        let params = new HttpParams();\n        this.search.startRow = 0;\n        this.search.pageSize = 1;\n        params = this.applyRestrictions(params, this.search);\n\n        return this.http.get(this.url + '/listSize', {\n            observe: 'response',\n            params: params\n        }).pipe(\n            map((res: HttpResponse<number>) => {\n                    return res.headers.get('listSize') != null ? +res.headers.get('listSize') : 0;\n                }\n            ),\n            catchError(this.handleError)\n        );\n    }\n\n    protected applyRestrictions(params: HttpParams, search: any, prefix?: string) {\n        if (!prefix) {\n            prefix = '';\n        } else {\n            prefix = prefix + '.';\n        }\n        for (const key in search) {\n            if (search[key] !== undefined && search[key] !== null ) {\n                if (!(search[key] instanceof Object)) {\n                    params = params.set(prefix + key, this.toQueryParam(prefix + key, search[key]));\n                } else if (search[key] instanceof Date) {\n                    params = params.set(prefix + key, this.toQueryParam(prefix + key, search[key]));\n                } else {\n                    params = this.applyRestrictions(params, search[key], prefix + key);\n                }\n            }\n        }\n        return params;\n    }\n\n    protected toQueryParam(field: string, value: any): any {\n        if (value instanceof Date) {\n            return (value as Date).toLocaleString('it-IT', {hour12: false});\n        }\n        return value;\n    }\n\n    public find(id: string): Observable<T> {\n        return this.http.get<T>(this.url + '/' + id);\n    }\n\n    public newInstance(type: { new(): T; }): T {\n        return new type();\n    }\n\n    public delete(id: string): Observable<any> {\n        return this.http.delete(this.url + '/' + id, {responseType: 'text'})\n            .pipe(catchError(this.handleError));\n    }\n\n    public persist(element: T): Observable<T> {\n        return this.http.post<T>(this.url, element)\n            .pipe(catchError(this.handleError));\n    }\n\n    public update(element: T): Observable<T> {\n        return this.http.put<T>(this.url + '/' + this.getId(element), element)\n            .pipe(catchError(this.handleError));\n    }\n\n    public handleError(error: HttpErrorResponse): Observable<any> {\n        if (error.status === 401) {\n            return Observable.throw({status: error.status, error: 'Unauthorized'});\n        } else if (error.status === 500) {\n            return Observable.throw({status: error.status, error: error.message  || error.error});\n        }\n        return Observable.throw(error.message /*json().msg*/ || error.error /*json().error*/ || 'Server error');\n    }\n\n    public getInstance(TCreator: { new(): T; }): T {\n        return new TCreator();\n    }\n\n    public abstract getId(element: T);\n\n    public abstract buildSearch();\n\n    public getAllList(search?: Search<T>): Observable<T[]> {\n        let params = new HttpParams();\n\n        if (search == null) {\n            search = JSON.parse(JSON.stringify(this.search));\n        }\n        search.pageSize = 100000;\n        params = this.applyRestrictions(params, search);\n\n        return this.http.get<HttpResponse<T []>>(this.url, {\n            observe: 'response',\n            params: params\n        }).pipe(\n            map(res => {\n                    const ts: any = res.body;\n                    this.postList(ts);\n                    return ts;\n                }\n            ),\n            catchError(this.handleError)\n        );\n    }\n\n    protected postList(ts: T[]) {\n    }\n\n    protected postFind(t: T) {\n    }\n\n    public getUrl(link: string): string {\n        return this.generateLink(link, this.search);\n    }\n\n    private generateLink(link: string, search: any, prefix?: string) {\n        if (!prefix) {\n            prefix = '';\n        } else {\n            prefix = prefix + '.';\n        }\n        for (const key in search) {\n            if (search[key] !== null) {\n                if (!(search[key] instanceof Object)) {\n                    if (link.endsWith('?')) {\n                        link = link + prefix + key + '=' + this.toQueryParam(prefix + key, search[key]);\n\n                    } else {\n                        link = link + '&' + prefix + key + '=' + this.toQueryParam(prefix + key, search[key]);\n                    }\n                } else if (search[key] instanceof Date) {\n                    if (link.endsWith('?')) {\n                        link = link + prefix + key + '=' + this.toQueryParam(prefix + key, search[key]);\n\n                    } else {\n                        link = link + '&' + prefix + key + '=' + this.toQueryParam(prefix + key, search[key]);\n                    }\n                } else {\n                    // return this.generateLink(link, search[key], prefix + key);\n                    link = this.generateLink(link, search[key], prefix + key);\n                }\n            }\n        }\n        return link;\n    }\n\n}\n","export class Search<T> {\n    from: T;\n    to: T;\n    like: T;\n    obj: T;\n    not: T;\n\n    startRow = 0;\n    pageSize = 5;\n    orderBy: string;\n\n    constructor(TCreator: { new (): T; }) {\n        this.from = new TCreator();\n        this.to = new TCreator();\n        this.like = new TCreator();\n        this.obj = new TCreator();\n        this.not = new TCreator();\n    }\n\n}\n","\nexport class Utente {\n\n    username: string;\n    nome: string;\n    ruoli: string[];\n    admin: boolean;\n\n    constructor() {\n    }\n}\n","module.exports = \"<p-messages [(value)]=\\\"msgs\\\" closable=\\\"false\\\"></p-messages>\\n\\n<div class=\\\"ui-g\\\">\\n    <p-confirmDialog header=\\\"Conferma\\\" icon=\\\"fa fa-question-circle\\\" acceptLabel=\\\"Sì\\\" rejectLabel=\\\"No\\\"\\n                     #cd></p-confirmDialog>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <span class=\\\"Fs20 Blue FontBold\\\">Configurazione Societa</span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\" style=\\\"margin-bottom: 0px !important; min-height: calc(100vh - 152px)\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n\\n\\n                    <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Nome</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.like.nome\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Codice Societa</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.like.societaId\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Cerca\\\"\\n                            (click)=\\\"reload(table)\\\"></button>\\n                </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <p-table [value]=\\\"model\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"lazyLoad($event)\\\" [paginator]=\\\"true\\\"\\n                             [responsive]=\\\"true\\\" [rows]=\\\"service.search.pageSize\\\"\\n                             [totalRecords]=\\\"service.listSize\\\" [resizableColumns]=\\\"true\\\" #table>\\n                        <tr>\\n                            <td [attr.colspan]=\\\"8\\\">\\n                                Nessun risultato.\\n                            </td>\\n                        </tr>\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\n                            <tr>\\n                                <td [attr.colspan]=\\\"8\\\">\\n                                    Nessun risultato.\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\n                            <tr class=\\\"TexBold\\\">\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important; width:80px\\\">Indice\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'nome'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;  width:350px\\\">Nome/Mail/SocietaId\\n                                    <p-sortIcon [field]=\\\"'nome'\\\"></p-sortIcon>\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important; width:150px\\\">Forza / Privacy\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important; \\\">WS Operazioni/ WS TUrni\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;  width:250px\\\">Tolleranza (minuti) /\\n                                    Retention\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important; width:150px\\\">Operazioni\\n                                </th>\\n                            </tr>\\n\\n\\n                        </ng-template>\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\n                            <tr>\\n                                <td class=\\\"RowIndex\\\">{{ rowIndex + 1 }}</td>\\n\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.nome}}<br/>\\n                                    {{rowData.mail}}<br/>\\n                                    {{rowData.societaId}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <label class=\\\"FontBold Wid20\\\">Nome</label>\\n                                    <br/>\\n                                    <input pInputText class=\\\"Wid100\\\" type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.nome\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Mail</label>\\n                                    <br/>\\n                                    <input pInputText class=\\\"Wid100\\\" type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.mail\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">SocietaId</label>\\n                                    <br/>\\n                                    <input pInputText class=\\\"Wid100\\\" type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.societaId\\\">\\n                                </td>\\n\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.forzaScrittura}}/{{rowData.gestisciPrivacy}}\\n                                </td>\\n\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <p-checkbox [(ngModel)]=\\\"elementToEdit.forzaScrittura\\\" binary=\\\"true\\\"\\n                                                label=\\\"forza scrittura\\\"></p-checkbox>\\n                                    <br/>\\n                                    <p-checkbox [(ngModel)]=\\\"elementToEdit.gestisciPrivacy\\\" binary=\\\"true\\\"\\n                                                label=\\\"privacy\\\"></p-checkbox>\\n\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.wsOperazioni}}\\n                                    <br/>\\n                                    {{rowData.wsTurni}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <label class=\\\"FontBold Wid20\\\">Operazioni</label>\\n                                    <br/>\\n                                    <input pInputText class=\\\"Wid100\\\" type=\\\"text\\\"\\n                                           [(ngModel)]=\\\"elementToEdit.wsOperazioni\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Turno</label>\\n                                    <br/>\\n                                    <input pInputText class=\\\"Wid100\\\" type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.wsTurni\\\">\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.tolleranzaMinuti}}\\n                                    {{rowData.retentionPeriod}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <label class=\\\"FontBold Wid20\\\">Tolleranza</label>\\n                                    <br/>\\n                                    <input pInputText class=\\\"Wid100\\\" type=\\\"text\\\"\\n                                           [(ngModel)]=\\\"elementToEdit.tolleranzaMinuti\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Retention</label>\\n                                    <br/>\\n                                    <input pInputText class=\\\"Wid100\\\" type=\\\"text\\\"\\n                                           [(ngModel)]=\\\"elementToEdit.retentionPeriod\\\">\\n                                </td>\\n\\n                                <td class=\\\"Operations\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"confirmDelete(rowData)\\\"\\n                                            icon=\\\"pi pi-trash\\\"></button>\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"editInline(rowData)\\\"\\n                                            icon=\\\"pi pi-pencil\\\"></button>\\n                                </td>\\n                                <td class=\\\"Operations\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"cancelEdit()\\\"\\n                                            icon=\\\"pi pi-times\\\"></button>\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"update(rowData)\\\"\\n                                            icon=\\\"pi pi-save\\\"></button>\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n                    </p-table>\\n                </div>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <p-panel header=\\\"Inserimento nuovo record\\\">\\n                    <div class=\\\"ui-g\\\">\\n                        <div class=\\\"ui-g-12\\\">\\n\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Nome</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.nome\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Mail</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.mail\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"ui-g-12\\\">\\n\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Retention Period (Giorni)</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"number\\\"\\n                                               [(ngModel)]=\\\"element.retentionPeriod\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Tolleranza (Minuti)</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"number\\\"\\n                                               [(ngModel)]=\\\"element.tolleranzaMinuti\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"ui-g-12\\\">\\n\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Ws Operazioni</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.wsOperazioni\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>WS Turni</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.wsTurni\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"ui-g-12\\\">\\n\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Forza Scrittura</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <p-checkbox [(ngModel)]=\\\"element.forzaScrittura\\\" binary=\\\"true\\\"></p-checkbox>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Gestisci Privacy</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <p-checkbox [(ngModel)]=\\\"element.gestisciPrivacy\\\" binary=\\\"true\\\"></p-checkbox>\\n\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"ui-g-12\\\">\\n\\n\\n                            <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Societa Id</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.societaId\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"ui-g-5 TexAlRight\\\">\\n                            <button type=\\\"button\\\" pButton icon=\\\"pi pi-save\\\" label=\\\"Salva\\\"\\n                                    (click)=\\\"save()\\\"></button>\\n                        </div>\\n                        <div class=\\\"ui-g-2 TexAlCenter\\\">\\n\\n                        </div>\\n                        <div class=\\\"ui-g-5 TexAlLeft\\\">\\n                            <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Annulla\\\"\\n                                    (click)=\\\"undo(null)\\\"></button>\\n                        </div>\\n                    </div>\\n                </p-panel>\\n\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from \"@angular/core\";\nimport {AbstractListComponent} from \"../../commons/abstract-list-component\";\nimport {Router} from \"@angular/router\";\nimport {CompanyConfigurationsService} from \"../../services/companyConfigurations.service\";\nimport {CompanyConfiguration} from \"../../models/companyConfiguration\";\nimport {Language} from \"../../models/language\";\nimport {manageErrorCode} from \"../../shared/manageErrorCode\";\nimport {ConfirmationService} from \"primeng/api\";\n\n@Component({\n    templateUrl: './companyConfigurations-list.component.html',\n})\nexport class CompanyConfigurationsListComponent extends AbstractListComponent<CompanyConfiguration> implements OnInit {\n\n    constructor(protected router: Router,\n                public service: CompanyConfigurationsService,\n                public confirmationService: ConfirmationService) {\n        super(router, service);\n    }\n\n\n    elementToEdit: CompanyConfiguration;\n    elementToDelete: CompanyConfiguration;\n\n    ngOnInit(): void {\n        if (!this.element) {\n            this.element = new CompanyConfiguration();\n        }\n        super.ngOnInit();\n    }\n\n    getId() {\n        return this.element.uuid;\n    }\n\n    toRec(obj: any): CompanyConfiguration {\n        return obj;\n    }\n\n\n    confirmDelete(elementToDelete: CompanyConfiguration) {\n        this.elementToDelete = elementToDelete;\n        this.confirmationService.confirm({\n            message: 'Sei sicuro di voler eliminare questo record?',\n            accept: () => {\n                this.delete(this.elementToDelete);\n            }\n        });\n    }\n\n\n    public delete(element: CompanyConfiguration) {\n        this.clearMsgs();\n        this.service.delete(this.elementToDelete.uuid).subscribe(\n            result => {\n                this.addInfo('Eliminazione completata con successo. ');\n                this.elementToDelete = this.newElement();\n                this.loaddata(false);\n                this.postDelete();\n            },\n            error => {\n                manageErrorCode(\n                    'Impossibile completare la eliminazione',\n                    this.msgs,\n                    this.router\n                );\n            }\n        );\n    }\n\n\n    public update() {\n        this.clearMsgs();\n        this.service.update(this.elementToEdit).subscribe(\n            element => {\n                this.addInfo('Modifica completata con successo. ');\n                this.elementToEdit = null;\n            },\n            error => {\n                manageErrorCode(\n                    'Impossibile completare la modifica',\n                    this.msgs,\n                    this.router\n                );\n            }\n        );\n    }\n\n    public cancelEdit() {\n        this.elementToEdit = null;\n    }\n\n    editInline(elementToEdit: CompanyConfiguration) {\n        this.elementToEdit = elementToEdit;\n    }\n\n    postDelete() {\n        this.elementToDelete = null;\n    }\n\n\n    postSave() {\n        super.postSave();\n    }\n\n\n    newElement(): CompanyConfiguration {\n        return new CompanyConfiguration();\n    }\n}","module.exports = \"<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './companyConfigurations.component.html'\n})\nexport class CompanyConfigurationsComponent {\n    constructor() {\n\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"ui-g ui-fluid dashboard\\\">\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <span class=\\\"Fs20 Blue FontBold\\\">Home</span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">\\n        <div class=\\\"ui-g card colorbox colorbox-2\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <a [routerLink]=\\\"['/companyconfigurations/list']\\\">\\n                    <i class=\\\"material-icons\\\">settings</i>\\n                </a>\\n            </div>\\n            <div class=\\\"ui-g-8\\\" style=\\\"height: 100px; padding-top: 10px;\\\">\\n                <span class=\\\"colorbox-name\\\">Configurazione aziende</span>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <span class=\\\"colorbox-count\\\">{{combined?.companyConfigurations}}</span>\\n                <div class=\\\"EmptyBox5\\\"></div>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">\\n        <div class=\\\"ui-g card colorbox colorbox-2\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <a [routerLink]=\\\"['/languages/list']\\\">\\n                    <i class=\\\"material-icons\\\">language</i>\\n                </a>\\n            </div>\\n            <div class=\\\"ui-g-8\\\" style=\\\"height: 100px; padding-top: 10px;\\\">\\n                <span class=\\\"colorbox-name\\\">Lingue</span>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <span class=\\\"colorbox-count\\\">{{combined?.languages}}</span>\\n                <div class=\\\"EmptyBox5\\\"></div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">\\n        <div class=\\\"ui-g card colorbox colorbox-2\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <a [routerLink]=\\\"['/locations/list']\\\">\\n                    <i class=\\\"material-icons\\\">location_on</i>\\n                </a>\\n            </div>\\n            <div class=\\\"ui-g-8\\\" style=\\\"height: 100px; padding-top: 10px;\\\">\\n                <span class=\\\"colorbox-name\\\">Location</span>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <span class=\\\"colorbox-count\\\">{{combined?.locations}}</span>\\n                <div class=\\\"EmptyBox5\\\"></div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">\\n        <div class=\\\"ui-g card colorbox colorbox-2\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <a [routerLink]=\\\"['/notifications/list']\\\">\\n                    <i class=\\\"material-icons\\\">send</i>\\n                </a>\\n            </div>\\n            <div class=\\\"ui-g-8\\\" style=\\\"height: 100px; padding-top: 10px;\\\">\\n                <span class=\\\"colorbox-name\\\">Notifiche</span>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <span class=\\\"colorbox-count\\\">{{combined?.notifications}}</span>\\n                <div class=\\\"EmptyBox5\\\"></div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">\\n        <div class=\\\"ui-g card colorbox colorbox-2\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <a [routerLink]=\\\"['/operations/list']\\\">\\n                    <i class=\\\"material-icons\\\">edit</i>\\n                </a>\\n            </div>\\n            <div class=\\\"ui-g-8\\\" style=\\\"height: 100px; padding-top: 10px;\\\">\\n                <span class=\\\"colorbox-name\\\">Operazioni</span>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <span class=\\\"colorbox-count\\\">{{combined?.operations}}</span>\\n                <div class=\\\"EmptyBox5\\\"></div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"ui-g-12 ui-md-6 ui-lg-3\\\">\\n        <div class=\\\"ui-g card colorbox colorbox-2\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <a [routerLink]=\\\"['/workshifts/list']\\\">\\n                    <i class=\\\"material-icons\\\">group_work</i>\\n                </a>\\n            </div>\\n            <div class=\\\"ui-g-8\\\" style=\\\"height: 100px; padding-top: 10px;\\\">\\n                <span class=\\\"colorbox-name\\\">Turni</span>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <span class=\\\"colorbox-count\\\">{{combined?.workshifts}}</span>\\n                <div class=\\\"EmptyBox5\\\"></div>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {TopMenuService} from \"../../services/top-menu.service\";\nimport {Utente} from \"../../commons/models/utente\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {Router} from \"@angular/router\";\nimport {CompanyConfigurationsService} from \"../../services/companyConfigurations.service\";\nimport {LanguagesService} from \"../../services/languages.service\";\nimport {LocationsService} from \"../../services/locations.service\";\nimport {NotificationsService} from \"../../services/notifications.service\";\nimport {OperationsService} from \"../../services/operations.service\";\nimport {WorkshiftsService} from \"../../services/workshifts.service\";\n\n@Component({\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    public utente: Utente;\n    public combined: any = {};\n\n    constructor(private topMenuService: TopMenuService,\n                public router: Router,\n                private authenticationService: AuthenticationService,\n                private companyConfigurationService: CompanyConfigurationsService,\n                private languagesService: LanguagesService,\n                private locationsService: LocationsService,\n                private notificationsService: NotificationsService,\n                private operationsService: OperationsService,\n                private workshiftsService: WorkshiftsService,\n    ) {\n        this.utente = new Utente();\n    }\n\n    ngOnInit() {\n        this.topMenuService.activateMenu('home');\n        this.authenticationService.getUser().subscribe(utente => {\n            this.combined['cooprp'] = {attive: {}, passive: {}};\n            if (utente == null || utente.ruoli == null || utente.ruoli.length === 0) {\n                console.log('should not happen. we have CAS!');\n            }\n\n            this.utente = utente;\n        });\n        this.companyConfigurationService.buildSearch();\n        this.companyConfigurationService.size().subscribe(\n            res => this.combined['companyConfigurations'] = res\n        );\n        this.languagesService.buildSearch();\n        this.languagesService.size().subscribe(\n            res => this.combined['languages'] = res\n        );\n        this.locationsService.buildSearch();\n        this.locationsService.size().subscribe(\n            res => this.combined['locations'] = res\n        );\n        this.notificationsService.buildSearch();\n        this.notificationsService.size().subscribe(\n            res => this.combined['notifications'] = res\n        );\n        this.operationsService.buildSearch();\n        this.operationsService.size().subscribe(\n            res => this.combined['operations'] = res\n        );\n        this.workshiftsService.buildSearch();\n        this.workshiftsService.size().subscribe(\n            res => this.combined['workshifts'] = res\n        );\n    }\n\n}\n","module.exports = \"<p-messages [(value)]=\\\"msgs\\\" closable=\\\"false\\\"></p-messages>\\n\\n<div class=\\\"ui-g\\\">\\n    <p-confirmDialog header=\\\"Conferma\\\" icon=\\\"fa fa-question-circle\\\" acceptLabel=\\\"Sì\\\" rejectLabel=\\\"No\\\"\\n                     #cd></p-confirmDialog>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <span class=\\\"Fs20 Blue FontBold\\\">Lista Dizonari Multilingua</span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\" style=\\\"margin-bottom: 0px !important; min-height: calc(100vh - 152px)\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Lingua</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.obj.language\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Chiave</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.obj.key\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Valore</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.like.value\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Cerca\\\"\\n                            (click)=\\\"reload(table)\\\"></button>\\n                </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <p-table [value]=\\\"model\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"lazyLoad($event)\\\" [paginator]=\\\"true\\\"\\n                             [responsive]=\\\"true\\\" [rows]=\\\"service.search.pageSize\\\"\\n                             [totalRecords]=\\\"service.listSize\\\" [resizableColumns]=\\\"true\\\" #table>\\n                        <tr>\\n                            <td [attr.colspan]=\\\"10\\\">\\n                                Nessun risultato.\\n                            </td>\\n                        </tr>\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\n                            <tr>\\n                                <td [attr.colspan]=\\\"10\\\">\\n                                    Nessun risultato.\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\n                            <tr class=\\\"TexBold\\\">\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important; width:80px\\\">Indice\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'language'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Lingua\\n                                    <p-sortIcon [field]=\\\"'language'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'key'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Chiave\\n                                    <p-sortIcon [field]=\\\"'key'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'value'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Valore\\n                                    <p-sortIcon [field]=\\\"'value'\\\"></p-sortIcon>\\n                                </th>\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important;width:150px\\\">Operazioni\\n                                </th>\\n                            </tr>\\n\\n\\n                        </ng-template>\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\n                            <tr>\\n                                <td class=\\\"RowIndex\\\">{{ rowIndex + 1 }}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.uuid}}</td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.language}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.key}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.key\\\">\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.value}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.value\\\">\\n                                </td>\\n                                <td class=\\\"Operations\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"confirmDelete(rowData)\\\"\\n                                            icon=\\\"pi pi-trash\\\"></button>\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"editInline(rowData)\\\"\\n                                            icon=\\\"pi pi-pencil\\\"></button>\\n                                </td>\\n                                <td class=\\\"Operations\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"cancelEdit()\\\"\\n                                            icon=\\\"pi pi-times\\\"></button>\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"update(rowData)\\\"\\n                                            icon=\\\"pi pi-save\\\"></button>\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n                    </p-table>\\n                </div>\\n            </div>\\n            <p-panel header=\\\"Inserimento nuovo record\\\">\\n\\n                <div class=\\\"ui-g\\\">\\n                    <div class=\\\"ui-g-12\\\">\\n\\n\\n                        <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                    <label>Lingua</label>\\n                                </div>\\n                                <div class=\\\"ui-g-9\\\">\\n                                    <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.language\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                    <label>Chiave</label>\\n                                </div>\\n                                <div class=\\\"ui-g-9\\\">\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.key\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                    <label>Valore</label>\\n                                </div>\\n                                <div class=\\\"ui-g-9\\\">\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.value\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-5 TexAlRight\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-save\\\" label=\\\"Salva\\\"\\n                                (click)=\\\"save()\\\"></button>\\n                    </div>\\n                    <div class=\\\"ui-g-2 TexAlCenter\\\">\\n\\n                    </div>\\n                    <div class=\\\"ui-g-5 TexAlLeft\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Annulla\\\"\\n                                (click)=\\\"undo(null)\\\"></button>\\n                    </div>\\n                </div>\\n            </p-panel>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from \"@angular/core\";\nimport {AbstractListComponent} from \"../../commons/abstract-list-component\";\nimport {Language} from \"../../models/language\";\nimport {Router} from \"@angular/router\";\nimport {LanguagesService} from \"../../services/languages.service\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {manageErrorCode} from \"../../shared/manageErrorCode\";\n\n@Component({\n    templateUrl: './languages-list.component.html',\n})\nexport class LanguagesListComponent extends AbstractListComponent<Language> implements OnInit {\n\n    constructor(protected router: Router,\n                public service: LanguagesService,\n                public confirmationService: ConfirmationService) {\n        super(router, service);\n    }\n\n\n    elementToEdit: Language;\n    elementToDelete: Language;\n\n    ngOnInit(): void {\n        if (!this.element) {\n            this.element = new Language();\n        }\n        if (!this.elementToEdit) {\n            this.elementToEdit = new Language();\n        }\n        super.ngOnInit();\n    }\n\n    getId() {\n        return this.element.uuid;\n    }\n\n    toRec(obj: any): Language {\n        return obj;\n    }\n\n\n    confirmDelete(elementToDelete: Language) {\n        this.elementToDelete = elementToDelete;\n        this.confirmationService.confirm({\n            message: 'Sei sicuro di voler eliminare questo record?',\n            accept: () => {\n                this.delete(this.elementToDelete);\n            }\n        });\n    }\n\n\n    public delete(element: Language) {\n        this.clearMsgs();\n        this.service.delete(this.elementToDelete.uuid).subscribe(\n            result => {\n                this.addInfo('Eliminazione completata con successo. ');\n                this.elementToDelete = this.newElement();\n                this.loaddata(false);\n                this.postDelete();\n            },\n            error => {\n                manageErrorCode(\n                    'Impossibile completare la eliminazione',\n                    this.msgs,\n                    this.router\n                );\n            }\n        );\n    }\n\n\n    public update() {\n        this.clearMsgs();\n        this.service.update(this.elementToEdit).subscribe(\n            element => {\n                this.addInfo('Modifica completata con successo. ');\n                this.elementToEdit = null;\n            },\n            error => {\n                manageErrorCode(\n                    'Impossibile completare la modifica',\n                    this.msgs,\n                    this.router\n                );\n            }\n        );\n    }\n\n    public cancelEdit() {\n        this.elementToEdit = null;\n    }\n\n    editInline(elementToEdit: Language) {\n        this.elementToEdit = elementToEdit;\n    }\n\n    postDelete() {\n        this.elementToDelete = null;\n    }\n\n\n    postSave() {\n        super.postSave();\n    }\n\n\n    newElement(): Language {\n        return new Language();\n    }\n}","module.exports = \"<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './languages.component.html'\n})\nexport class LanguagesComponent {\n    constructor() {\n\n    }\n}\n","module.exports = \"<p-messages [(value)]=\\\"msgs\\\" closable=\\\"false\\\"></p-messages>\\n\\n<div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <span class=\\\"Fs20 Blue FontBold\\\">Lista Location</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\" style=\\\"margin-bottom: 0px !important; min-height: calc(100vh - 152px)\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n\\n                    <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Nome</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.obj.nome\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-6 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Codice Societa</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.obj.societaId\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Cerca\\\"\\n                            (click)=\\\"reload(table)\\\"></button>\\n                </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <p-table [value]=\\\"model\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"lazyLoad($event)\\\" [paginator]=\\\"true\\\"\\n                             [responsive]=\\\"true\\\" [rows]=\\\"service.search.pageSize\\\"\\n                             [totalRecords]=\\\"service.listSize\\\" [resizableColumns]=\\\"true\\\" #table>\\n                        <tr>\\n                            <td [attr.colspan]=\\\"7\\\">\\n                                Nessun risultato.\\n                            </td>\\n                        </tr>\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\n                            <tr>\\n                                <td [attr.colspan]=\\\"7\\\">\\n                                    Nessun risultato.\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\n                            <tr class=\\\"TexBold\\\">\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important; width:80px\\\">Indice\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">\\n                                    Latitudine\\n                                    <br/>\\n                                    Longitudine\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Indirizzo\\n                                    <br/>\\n                                    Comune\\n                                    <br/>\\n                                    Provincia\\n                                    <br/>\\n                                    Nazione\\n                                </th>\\n\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">\\n                                    Wbs\\n                                    <br/>\\n                                    Cantiere\\n                                    <br/>\\n                                    Commessa\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'societaId'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Societa\\n                                    <p-sortIcon [field]=\\\"'societaId'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'mail'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Mail\\n                                    <p-sortIcon [field]=\\\"'mail'\\\"></p-sortIcon>\\n                                </th>\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important; width:150px\\\">Operazioni</th>\\n                            </tr>\\n\\n\\n                        </ng-template>\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\n                            <tr>\\n                                <td class=\\\"RowIndex\\\">{{ rowIndex + 1 }}</td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.latitudine}}\\n                                    <br/>\\n                                    {{rowData.longitudine}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <label class=\\\"FontBold Wid20\\\">Latitudine</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.latitudine\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Longitudine</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\"\\n                                           [(ngModel)]=\\\"elementToEdit.longitudine\\\">\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.indirizzo}}\\n                                    <br/>\\n                                    {{rowData.comune}}\\n                                    <br/>\\n                                    {{rowData.provincia}}\\n                                    <br/>\\n                                    {{rowData.nazione}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <label class=\\\"FontBold Wid20\\\">Indirizzo</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.indirizzo\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Comune</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.comune\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Provincia</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.provincia\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Nazione</label>\\n                                    <br/>\\n                                    <input id=\\\"nazione_label\\\" class=\\\"Wid100\\\" pInputText type=\\\"text\\\"\\n                                           [(ngModel)]=\\\"elementToEdit.nazione\\\">\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.wbs}}\\n                                    <br/>\\n                                    {{rowData.cantiere}}\\n                                    <br/>\\n                                    {{rowData.commessa}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <label class=\\\"FontBold Wid20\\\">Wbs</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.wbs\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Cantiere</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.cantiere\\\">\\n                                    <br/>\\n                                    <label class=\\\"FontBold Wid20\\\">Commessa</label>\\n                                    <br/>\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.commessa\\\">\\n                                </td>\\n\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.societaId}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.societaId\\\">\\n                                </td>\\n\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    {{rowData.mail}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"elementToEdit.mail\\\">\\n                                </td>\\n                                <td class=\\\"Operations\\\"\\n                                    *ngIf=\\\"elementToEdit == null || elementToEdit.uuid !== rowData.uuid\\\">\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"confirmDelete(rowData)\\\"\\n                                            icon=\\\"pi pi-trash\\\"></button>\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"editInline(rowData)\\\"\\n                                            icon=\\\"pi pi-pencil\\\"></button>\\n                                </td>\\n                                <td class=\\\"Operations\\\"\\n                                    *ngIf=\\\"elementToEdit != null && elementToEdit.uuid === rowData.uuid\\\">\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"cancelEdit()\\\"\\n                                            icon=\\\"pi pi-times\\\"></button>\\n                                    <button type=\\\"button\\\" pButton (click)=\\\"update(rowData)\\\"\\n                                            icon=\\\"pi pi-save\\\"></button>\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n                    </p-table>\\n                </div>\\n                <div class=\\\"EmptyBox10\\\"></div>\\n                <p-panel header=\\\"Inserimento nuovo record\\\">\\n                    <div class=\\\"ui-g\\\">\\n                        <div class=\\\"ui-g-12\\\">\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Societa</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.societaId\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Mail</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.mail\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Latitudine</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.latitudine\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Longitudine</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.longitudine\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ui-g-12\\\">\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Indirizzo</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.indirizzo\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Comune</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.comune\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Provincia</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.provincia\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Nazione</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.nazione\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ui-g-12\\\">\\n\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>WBS</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.wbs\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Cantiere</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.cantiere\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                                <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                                    <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                        <label>Commessa</label>\\n                                    </div>\\n                                    <div class=\\\"ui-g-9\\\">\\n                                        <input class=\\\"Wid100\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"element.commessa\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"ui-g-3 ui-g-nopad\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ui-g-5 TexAlRight\\\">\\n                            <button type=\\\"button\\\" pButton icon=\\\"pi pi-save\\\" label=\\\"Salva\\\"\\n                                    (click)=\\\"save()\\\"></button>\\n                        </div>\\n                        <div class=\\\"ui-g-2 TexAlCenter\\\">\\n\\n                        </div>\\n                        <div class=\\\"ui-g-5 TexAlLeft\\\">\\n                            <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" label=\\\"Annulla\\\"\\n                                    (click)=\\\"undo(null)\\\"></button>\\n                        </div>\\n\\n                    </div>\\n                </p-panel>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from \"@angular/core\";\nimport {AbstractListComponent} from \"../../commons/abstract-list-component\";\nimport {Location} from \"../../models/location\";\nimport {Router} from \"@angular/router\";\nimport {LocationsService} from \"../../services/locations.service\";\nimport {manageErrorCode} from \"../../shared/manageErrorCode\";\nimport {ConfirmationService} from \"primeng/api\";\n\n@Component({\n    templateUrl: './locations-list.component.html',\n})\nexport class LocationsListComponent extends AbstractListComponent<Location> implements OnInit {\n\n    constructor(protected router: Router, public service: LocationsService, public confirmationService: ConfirmationService) {\n        super(router, service);\n    }\n\n\n    elementToEdit: Location;\n    elementToDelete: Location;\n\n    ngOnInit(): void {\n        if (!this.element) {\n            this.element = new Location();\n        }\n        super.ngOnInit();\n    }\n\n    getId() {\n        return this.element.uuid;\n    }\n\n    toRec(obj: any): Location {\n        return obj;\n    }\n\n    confirmDelete(elementToDelete: Location) {\n        this.elementToDelete = elementToDelete;\n        this.confirmationService.confirm({\n            message: 'Sei sicuro di voler eliminare questo record?',\n            accept: () => {\n                this.delete(this.elementToDelete);\n            }\n        });\n    }\n\n\n    public delete(element: Location) {\n        this.clearMsgs();\n        this.service.delete(this.elementToDelete.uuid).subscribe(\n            result => {\n                this.addInfo('Eliminazione completata con successo. ');\n                this.elementToDelete = this.newElement();\n                this.loaddata(false);\n                this.postDelete();\n            },\n            error => {\n                manageErrorCode(\n                    'Impossibile completare la eliminazione',\n                    this.msgs,\n                    this.router\n                );\n            }\n        );\n    }\n\n\n    public update() {\n        this.clearMsgs();\n        this.service.update(this.elementToEdit).subscribe(\n            element => {\n                this.addInfo('Modifica completata con successo. ');\n                this.elementToEdit = null;\n            },\n            error => {\n                manageErrorCode(\n                    'Impossibile completare la modifica',\n                    this.msgs,\n                    this.router\n                );\n            }\n        );\n    }\n\n    public cancelEdit() {\n        this.elementToEdit = null;\n    }\n\n    editInline(elementToEdit: Location) {\n        this.elementToEdit = elementToEdit;\n    }\n\n    postDelete() {\n        this.elementToDelete = null;\n    }\n\n\n    postSave() {\n        super.postSave();\n    }\n\n\n    newElement(): Location {\n        return new Location();\n    }\n}","module.exports = \"<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './locations.component.html'\n})\nexport class LocationsComponent {\n    constructor() {\n\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Utente} from \"../../commons/models/utente\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n\ttemplateUrl: './main-app.component.html',\n\tstyleUrls: ['./main-app.component.css']\n})\nexport class MainAppComponent implements OnInit {\n\n\tprivate utente: Utente;\n\n\tconstructor(private route: ActivatedRoute) {\n\t}\n\n\tngOnInit() {\n\t\tthis.route.data.subscribe((data: { utente: Utente }) => {\n\t\t\tif (data.utente) {\n\t\t\t\tthis.utente = data.utente;\n\t\t\t}\n\t\t});\n\t}\n\n}\n","module.exports = \"<p-messages [(value)]=\\\"msgs\\\" closable=\\\"false\\\"></p-messages>\\n\\n<div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <span class=\\\"Fs20 Blue FontBold\\\">Notifiche</span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\" style=\\\"margin-bottom: 0px !important; min-height: calc(100vh - 152px)\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Codice Fiscale</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\"\\n                                       [(ngModel)]=\\\"service.search.obj.codiceFiscale\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Operation Status</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\"\\n                                       [(ngModel)]=\\\"service.search.obj.operationStatus\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>uuid esterno</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\"\\n                                       [(ngModel)]=\\\"service.search.obj.uuid_esterno\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Cerca\\\"\\n                            (click)=\\\"reload(table)\\\"></button>\\n                </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <p-table [value]=\\\"model\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"lazyLoad($event)\\\" [paginator]=\\\"true\\\"\\n                             [responsive]=\\\"true\\\" [rows]=\\\"service.search.pageSize\\\"\\n                             [totalRecords]=\\\"service.listSize\\\" [resizableColumns]=\\\"true\\\" #table>\\n                        <tr>\\n                            <td [attr.colspan]=\\\"5\\\">\\n                                Nessun risultato.\\n                            </td>\\n                        </tr>\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\n                            <tr>\\n                                <td [attr.colspan]=\\\"5\\\">\\n                                    Nessun risultato.\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\n                            <tr class=\\\"TexBold\\\">\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important;width:80px\\\">Indice\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'operationStatus'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Operation Status\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'codiceFiscale'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Codice Fiscale\\n                                    <p-sortIcon [field]=\\\"'codiceFiscale'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'dataOra'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Data\\n                                    <p-sortIcon [field]=\\\"'dataOra'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'uuid_esterno'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Uuid esterno\\n                                    <p-sortIcon [field]=\\\"'uuid_esterno'\\\"></p-sortIcon>\\n                                </th>\\n                            </tr>\\n\\n\\n                        </ng-template>\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\n                            <tr>\\n                                <td class=\\\"RowIndex; width:80px\\\">{{ rowIndex + 1 }}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.operationStatus}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.codiceFiscale}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.dataOra}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.uuid_esterno}}</td>\\n\\n                            </tr>\\n                        </ng-template>\\n                    </p-table>\\n                    <div class=\\\"EmptyBox10\\\"></div>\\n                    <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Aggiorna\\\"\\n                                (click)=\\\"refresh(table)\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component, OnInit} from \"@angular/core\";\nimport {AbstractListComponent} from \"../../commons/abstract-list-component\";\nimport {Notification} from \"../../models/notification\";\nimport {Router} from \"@angular/router\";\nimport {NotificationsService} from \"../../services/notifications.service\";\nimport {CompanyConfiguration} from \"../../models/companyConfiguration\";\n\n@Component({\n    templateUrl: './notifications-list.component.html',\n})\nexport class NotificationsListComponent extends AbstractListComponent<Notification> implements OnInit {\n\n    constructor(protected router: Router, public service: NotificationsService) {\n        super(router, service);\n    }\n\n\n    ngOnInit(): void {\n\n        super.ngOnInit();\n    }\n\n    getId() {\n        return this.element.uuid;\n    }\n\n    toRec(obj: any): Notification {\n        return obj;\n    }\n\n    public view(element: Notification) {\n        this.element = element;\n        this.router.navigate(['/notifications/view', this.getId()]);\n    }\n\n    public edit(element: Notification) {\n        this.element = element;\n        this.router.navigate(['/notifications/edit', this.getId()]);\n    }\n\n\n    newElement(): Notification {\n        return new Notification();\n    }\n}","module.exports = \"<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './notifications.component.html'\n})\nexport class NotificationsComponent {\n    constructor() {\n\n    }\n}\n","module.exports = \"<p-messages [(value)]=\\\"msgs\\\" closable=\\\"false\\\"></p-messages>\\n\\n<div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <span class=\\\"Fs20 Blue FontBold\\\">Lista Operazioni</span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\" style=\\\"margin-bottom: 0px !important; min-height: calc(100vh - 152px)\\\">\\n\\n            <div class=\\\"ui-g\\\">\\n\\n                <div class=\\\"ui-g-12\\\">\\n\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Codice Fiscale</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\"\\n                                       [(ngModel)]=\\\"service.search.obj.codiceFiscale\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>Codice Societa paghe</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"service.search.obj.societaId\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Cerca\\\"\\n                            (click)=\\\"reload(table)\\\"></button>\\n                </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <p-table [value]=\\\"model\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"lazyLoad($event)\\\" [paginator]=\\\"true\\\"\\n                             [responsive]=\\\"true\\\" [rows]=\\\"service.search.pageSize\\\"\\n                             [totalRecords]=\\\"service.listSize\\\" [resizableColumns]=\\\"true\\\" #table>\\n                        <tr>\\n                            <td [attr.colspan]=\\\"8\\\">\\n                                Nessun risultato.\\n                            </td>\\n                        </tr>\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\n                            <tr>\\n                                <td [attr.colspan]=\\\"8\\\">\\n                                    Nessun risultato.\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\n                            <tr class=\\\"TexBold\\\">\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important;width:80px\\\">Indice\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Data/ Timezone/ Data normalizzata\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'societaId'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Codice societa\\n                                    <p-sortIcon [field]=\\\"'societaId'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'operationStatus'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Stato operazione\\n                                    <p-sortIcon [field]=\\\"'operationStatus'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'operationType'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Tipo operazione\\n                                    <p-sortIcon [field]=\\\"'operationType'\\\"></p-sortIcon>\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'codiceFiscale'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Codice Fiscale\\n                                    <p-sortIcon [field]=\\\"'codiceFiscale'\\\"></p-sortIcon>\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Coordinate\\n                                </th>\\n                                <th [pSortableColumn]=\\\"'location_uuid'\\\" pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Location\\n                                    <p-sortIcon [field]=\\\"'location_uuid'\\\"></p-sortIcon>\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Ricezione e Notifica\\n                                </th>\\n                            </tr>\\n\\n\\n                        </ng-template>\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\n                            <tr>\\n                                <td class=\\\"RowIndex\\\">{{ rowIndex + 1 }}</td>\\n                                <td class=\\\"ui-resizable-column\\\">\\n                                    {{rowData.dataOra |  date: 'dd/MM/yyyy HH:mm'}}\\n                                    <br/>\\n                                    {{rowData.timezone}}\\n                                    <br/>\\n                                    {{rowData.realDate|  date: 'dd/MM/yyyy HH:mm'}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.societaId}}</td>\\n\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.operationStatus}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.operationType}}</td>\\n\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.codiceFiscale}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.longitudine}} {{rowData.latitudine}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.location_uuid}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.dataRicezione}} {{rowData.dataNotifica}}</td>\\n\\n                            </tr>\\n                        </ng-template>\\n                    </p-table>\\n                    <div class=\\\"EmptyBox10\\\"></div>\\n                    <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Aggiorna\\\"\\n                                (click)=\\\"refresh(table)\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\"","import {Component, OnInit} from \"@angular/core\";\nimport {AbstractListComponent} from \"../../commons/abstract-list-component\";\nimport {Operation} from \"../../models/operation\";\nimport {Router} from \"@angular/router\";\nimport {OperationsService} from \"../../services/operations.service\";\n\n@Component({\n    templateUrl: './operations-list.component.html',\n})\nexport class OperationsListComponent extends AbstractListComponent<Operation> implements OnInit {\n\n    constructor(protected router: Router, public service: OperationsService) {\n        super (router, service);\n    }\n\n\n    ngOnInit(): void {\n\n        super.ngOnInit();\n    }\n\n    getId() {\n       return this.element.uuid;\n    }\n\n    toRec(obj: any): Operation {\n        return obj;\n    }\n\n    public view(element: Operation) {\n        this.element = element;\n        this.router.navigate(['/operations/view', this.getId()]);\n    }\n\n    public edit(element: Operation) {\n        this.element = element;\n        this.router.navigate(['/operations/edit', this.getId()]);\n    }\n\n}","module.exports = \"<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './operations.component.html'\n})\nexport class OperationsComponent {\n    constructor() {\n\n    }\n}\n","module.exports = \"<p-messages [(value)]=\\\"msgs\\\" closable=\\\"false\\\"></p-messages>\\n\\n<div class=\\\"ui-g\\\">\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"ui-g\\\">\\n                <div class=\\\"ui-g-12\\\">\\n                    <span class=\\\"Fs20 Blue FontBold\\\">Lista Turni</span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"card\\\" style=\\\"margin-bottom: 0px !important; min-height: calc(100vh - 152px)\\\">\\n            <div class=\\\"ui-g\\\">\\n\\n                <div class=\\\"ui-g-12\\\">\\n\\n                    <div class=\\\"ui-g-4 ui-g-nopad\\\">\\n                        <div class=\\\"ui-g-12 ui-g-nopad\\\">\\n                            <div class=\\\"ui-g-3 TexAlRight FontBold\\\">\\n                                <label>codiceFiscale</label>\\n                            </div>\\n                            <div class=\\\"ui-g-9\\\">\\n                                <input class=\\\"Wid90\\\" pInputText type=\\\"text\\\"\\n                                       [(ngModel)]=\\\"service.search.obj.codiceFiscale\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g-12 TexAlCenter\\\">\\n                    <button type=\\\"button\\\" pButton icon=\\\"pi pi-search\\\" label=\\\"Cerca\\\"\\n                            (click)=\\\"reload(table)\\\"></button>\\n                </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <p-table [value]=\\\"model\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"lazyLoad($event)\\\" [paginator]=\\\"true\\\"\\n                             [responsive]=\\\"true\\\" [rows]=\\\"service.search.pageSize\\\"\\n                             [totalRecords]=\\\"service.listSize\\\" [resizableColumns]=\\\"true\\\" #table>\\n                        <tr>\\n                            <td [attr.colspan]=\\\"6\\\">\\n                                Nessun risultato.\\n                            </td>\\n                        </tr>\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\n                            <tr>\\n                                <td [attr.colspan]=\\\"6\\\">\\n                                    Nessun risultato.\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\n                            <tr class=\\\"TexBold\\\">\\n                                <th class=\\\"FontBold\\\" style=\\\"background-color: aliceblue !important;width:80px\\\">Indice\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Codice fiscale\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Descrizione\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Societa\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Inizio Turno\\n                                </th>\\n                                <th pResizableColumn class=\\\"FontBold\\\"\\n                                    style=\\\"background-color: aliceblue !important;\\\">Fine Turno\\n                                </th>\\n                            </tr>\\n\\n\\n                        </ng-template>\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\n                            <tr>\\n                                <td class=\\\"RowIndex\\\">{{ rowIndex + 1 }}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.codiceFiscale}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.societaId}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">{{rowData.descrizione}}</td>\\n                                <td class=\\\"ui-resizable-column\\\">\\n                                    <br/>\\n                                    {{rowData.dataInizio}}\\n                                    <br/>\\n                                    {{rowData.wbsInizio}}\\n                                    <br/>\\n                                    {{rowData.locationInizio_uuid}}\\n                                </td>\\n                                <td class=\\\"ui-resizable-column\\\">\\n                                    <br/>\\n                                    {{rowData.dataFine}}\\n                                    <br/>\\n                                    {{rowData.wbsFine}}\\n                                    <br/>\\n                                    {{rowData.locationFine_uuid}}\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n                    </p-table>\\n                    <div class=\\\"EmptyBox10\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component, OnInit} from \"@angular/core\";\nimport {AbstractListComponent} from \"../../commons/abstract-list-component\";\nimport {Workshift} from \"../../models/workshift\";\nimport {Router} from \"@angular/router\";\nimport {WorkshiftsService} from \"../../services/workshifts.service\";\n\n@Component({\n    templateUrl: './workshifts-list.component.html',\n})\nexport class WorkshiftsListComponent extends AbstractListComponent<Workshift> implements OnInit {\n\n    constructor(protected router: Router, public service: WorkshiftsService) {\n        super(router, service);\n    }\n\n\n    ngOnInit(): void {\n\n        super.ngOnInit();\n    }\n\n    getId() {\n        return this.element.uuid;\n    }\n\n    toRec(obj: any): Workshift {\n        return obj;\n    }\n\n    public view(element: Workshift) {\n        this.element = element;\n        this.router.navigate(['/workshifts/view', this.getId()]);\n    }\n\n    public edit(element: Workshift) {\n        this.element = element;\n        this.router.navigate(['/workshifts/edit', this.getId()]);\n    }\n\n\n    newElement(): Workshift {\n        return new Workshift();\n    }\n}","module.exports = \"<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './workshifts.component.html'\n})\nexport class WorkshiftsComponent {\n    constructor() {\n\n    }\n}\n","import {APP_NAME} from \"./constants\";\n\nexport class AppConstants {\n\n\tpublic static loginUrl: string = APP_NAME + 'login';\n\tpublic static userUrl: string = APP_NAME + 'tech-user';\n\tpublic static freePageUrl: string = APP_NAME + 'freepage';\n\n\n}","export var PERMISSION = {\n    'ADMIN': ['Admin'],\n    'VIEW': ['Admin', 'Web']\n};\n\nexport const APP_PROTOCOL = window.location.protocol + '//';\nexport const APP_HOST = window.location.hostname + ':';\nexport const APP_PORT = window.location.port;\nexport const APP_CONTEXT = '/cooprp';\nexport const APP_API = '/api/v1/';\nexport const APP_NAME = APP_PROTOCOL + APP_HOST + APP_PORT + APP_CONTEXT + APP_API;\n\n\nexport const COMPANY_CONFIGURATIONS_URL = APP_NAME + 'companyconfigurations';\nexport const LANGUAGES_URL = APP_NAME + 'languages';\nexport const LOCATIONS_URL = APP_NAME + 'locations';\nexport const NOTIFICATIONS_URL = APP_NAME + 'notifications';\nexport const OPERATIONS_URL = APP_NAME + 'operations';\nexport const WORKSHIFTS_URL = APP_NAME + 'workshifts';\n\nexport const TOKEN_ITEM: string = 'cooprs.auth_token';\n\nexport const APP_VERSION: string = '1.0';\n","export class CompanyConfiguration {\n    uuid: string;\n    nome: string;\n    mail: string;\n    retentionPeriod: number;\n    wsOperazioni: string;\n    wsTurni: string;\n    tolleranzaMinuti: number;\n\n    forzaScrittura: boolean;\n    gestisciPrivacy: boolean;\n    societaId: boolean;\n\n}","export class Language {\n\n    uuid: string;\n    language: string;\n    key: string;\n    value: string;\n}","export class Location{\n\n    uuid: string;\n    location: any;\n    latitudine: string;\n    longitudine: string;\n    nome: string;\n    indirizzo: string;\n    comune: string;\n    provincia: string;\n    nazione: string;\n    wbs: string;\n    cantiere: string;\n    commessa: string;\n\n    societaId: string;\n    mail: string;\n}","export class Notification {\n\n    uuid: string;\n    operationStatus: string;\n    operation_uuid: string;\n    dataOra: string;\n    codiceFiscale: string;\n    uuid_esterno: string;\n}","export class Operation {\n    uuid: string;\n    operationStatus: string;\n    operationType: string;\n    location_uuid: string;\n    dataOra: string;\n    codiceFiscale: string;\n    latitudine: string;\n    longitudine: string;\n    dataRicezione: string;\n    dataNotifica: string;\n\n    timezone: string;\n    realDate: number;\n\n    societaId: string;\n}\n","export class Workshift {\n\n    uuid: string;\n    codiceFiscale: string;\n    societa: string;\n    dataInizio: string;\n    dataFine: string;\n    locationInizio_uuid: string;\n    locationFine_uuid: string;\n\n    wbsInizio: string;\n    wbsFine: string;\n\n    descrizione: string;\n}\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from \"@angular/core\";\nimport {UserResolveGuard} from \"../router-guards/user-resolve-guard\";\nimport {AuthenticationService} from \"../services/authentication.service\";\nimport {TopMenuService} from \"../services/top-menu.service\";\nimport {ConfirmationService} from \"primeng/api\";\nimport {LoginService} from \"../services/login.service\";\n\n@NgModule({\n\timports: []\n})\n\nexport class CoreModule {\n\n\tconstructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n\t\tif (parentModule) {\n\t\t\tthrow new Error(\n\t\t\t\t'CoreModule is already loaded. Import it in the AppModule only');\n\t\t}\n\t}\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: CoreModule,\n\t\t\tproviders: [\n\t\t\t\tConfirmationService,\n\t\t\t\tAuthenticationService,\n\t\t\t\tLoginService,\n\n\t\t\t\tUserResolveGuard,\n\t\t\t\tTopMenuService\n\t\t\t]\n\t\t};\n\t}\n}\n\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {ConfirmDialogModule} from \"primeng/primeng\";\nimport {ButtonModule} from \"primeng/button\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tConfirmDialogModule,\n\t\tButtonModule\n\t],\n\tdeclarations: [],\n\texports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tConfirmDialogModule,\n\t\tButtonModule\n\t],\n\tentryComponents: []\n})\nexport class MySharedModule {\n\n}\n","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {map, take} from \"rxjs/internal/operators\";\nimport {Utente} from \"../commons/models/utente\";\nimport {AuthenticationService} from \"../services/authentication.service\";\n\n@Injectable()\nexport class UserResolveGuard implements Resolve<Utente> {\n\tconstructor(private authenticationService: AuthenticationService) {\n\t}\n\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Utente> {\n\t\treturn this.authenticationService.getUser()\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tmap(\n\t\t\t\t\telement => {\n\t\t\t\t\t\treturn <Utente>element;\n\t\t\t\t\t})\n\t\t\t)\n\t}\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, of, throwError} from \"rxjs\";\nimport {Utente} from \"../commons/models/utente\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {AppConstants} from \"../constants/app-constants\";\nimport {catchError, map} from \"rxjs/internal/operators\";\n\n@Injectable()\nexport class AuthenticationService {\n\n    private url: string = AppConstants.userUrl;\n    private utente: Utente;\n\n    constructor(private httpClient: HttpClient) {\n    }\n\n    public getUser(): Observable<Utente> {\n        if (this.utente == null) {\n            return this.httpClient.get<Utente>(this.url).pipe(\n                map(utente => {\n                    this.utente = utente;\n                    return this.utente;\n                }),\n                catchError(this.handleError)\n            )\n        } else {\n            return of(this.utente);\n        }\n    }\n\n    public clearUser() {\n        this.utente = null;\n    }\n\n    private handleError(error: HttpErrorResponse): Observable<any> {\n        if (error == null) {\n            return throwError('Server error');\n        }\n        console.error(error);\n        if (error.status === 403) {\n            return throwError('Forbidden');\n        }\n        return throwError(error['error'] || 'Server error');\n    }\n}\n","import {AbstractService} from \"../commons/abstract-service\";\nimport {Search} from \"../commons/models/search\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {CompanyConfiguration} from \"../models/companyConfiguration\";\nimport {COMPANY_CONFIGURATIONS_URL} from \"../constants/constants\";\n\n@Injectable()\nexport class CompanyConfigurationsService extends AbstractService<CompanyConfiguration> {\n\n    constructor(protected http: HttpClient) {\n        super(COMPANY_CONFIGURATIONS_URL, http);\n    }\n\n    buildSearch() {\n        let search = new Search<CompanyConfiguration>(CompanyConfiguration);\n        search.pageSize = 10;\n        this.search = search;\n        return search;\n    }\n\n    getId(element: CompanyConfiguration) {\n        return element.uuid;\n    }\n\n\n}","import {Injectable} from \"@angular/core\";\nimport {HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class BasicHttpInterceptor implements HttpInterceptor {\n\n\tconstructor() {\n\t}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tlet headers: HttpHeaders = req.headers;\n\t\theaders = headers.set('Content-Type', 'application/json');\n\t\t// headers = headers.set('Cache-Control', 'no-cache');\n\t\t// headers = headers.set('Pragma', 'no-cache');\n\t\t// headers = headers.set('If-Modified-Since', 'Sat, 01 Jan 2000 00:00:00 GMT');\n\t\t// const token: string = localStorage.getItem('mmj.auth_token');\n\t\t// if (token != null && token != undefined) {\n\t\t//     headers = headers.set('Authorization', 'Bearer ' + token);\n\t\t// }\n\t\treturn next.handle(req.clone({headers: headers}));\n\t}\n}","import {AbstractService} from \"../commons/abstract-service\";\nimport {Language} from \"../models/language\";\nimport {Search} from \"../commons/models/search\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {LANGUAGES_URL} from \"../constants/constants\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class LanguagesService extends AbstractService<Language> {\n\n    constructor(protected http: HttpClient) {\n        super(LANGUAGES_URL, http);\n    }\n\n    buildSearch() {\n        let search = new Search<Language>(Language);\n        search.pageSize = 10;\n        this.search = search;\n        return search;\n    }\n\n    getId(element: Language) {\n        return element.uuid;\n    }\n\n\n}","import {AbstractService} from \"../commons/abstract-service\";\nimport {Search} from \"../commons/models/search\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {LOCATIONS_URL} from \"../constants/constants\";\nimport {Injectable} from \"@angular/core\";\nimport {Location} from \"../models/location\";\n\n@Injectable()\nexport class LocationsService extends AbstractService<Location> {\n\n    constructor(protected http: HttpClient) {\n        super(LOCATIONS_URL, http);\n    }\n\n    buildSearch() {\n        let search = new Search<Location>(Location);\n        search.pageSize = 10;\n        this.search = search;\n        return search;\n    }\n\n    getId(element: Location) {\n        return element.uuid;\n    }\n\n\n}","import {Injectable} from '@angular/core';\nimport {EMPTY, Observable, throwError} from \"rxjs/index\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {catchError, map, switchMap} from \"rxjs/internal/operators\";\nimport {AppConstants} from \"../constants/app-constants\";\nimport {TOKEN_ITEM} from \"../constants/constants\";\nimport {AuthenticationService} from \"./authentication.service\";\n\n@Injectable()\nexport class LoginService {\n\n\tconstructor(private httpClient: HttpClient,\n\t\t\t\tprivate authenticationService: AuthenticationService) {\n\t}\n\n\tpublic login(username: string, password: string): Observable<void> {\n\t\treturn this.httpClient.post<string>(AppConstants.loginUrl, {username: username, password: password}).pipe(\n\t\t\tmap(token => {\n\t\t\t\tlocalStorage.setItem(TOKEN_ITEM, token);\n\t\t\t}),\n\t\t\tswitchMap(() => {\n\t\t\t\treturn this.authenticationService.getUser().pipe(\n\t\t\t\t\tmap(() => {\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}),\n\t\t\tcatchError(this.handleError)\n\t\t)\n\t}\n\n\tpublic logout() {\n\t\tlocalStorage.removeItem(TOKEN_ITEM);\n\t\tthis.authenticationService.clearUser();\n\t}\n\n\tprivate handleError(error: HttpErrorResponse): Observable<any> {\n\t\tif (error == null) {\n\t\t\treturn throwError('Server error');\n\t\t}\n\t\tconsole.error(error);\n\t\tif (error.status === 403) {\n\t\t\treturn throwError('Forbidden');\n\t\t}\n\t\treturn throwError(error['error'] || 'Server error');\n\t}\n}\n","import {AbstractService} from \"../commons/abstract-service\";\nimport {Notification} from \"../models/notification\";\nimport {Search} from \"../commons/models/search\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NOTIFICATIONS_URL} from \"../constants/constants\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class NotificationsService extends AbstractService<Notification> {\n\n    constructor(protected http: HttpClient) {\n        super(NOTIFICATIONS_URL, http);\n    }\n\n    buildSearch() {\n        let search = new Search<Notification>(Notification);\n        search.pageSize = 10;\n        this.search = search;\n        return search;\n    }\n\n    getId(element: Notification) {\n        return element.uuid;\n    }\n\n\n}","import {AbstractService} from \"../commons/abstract-service\";\nimport {Operation} from \"../models/operation\";\nimport {Search} from \"../commons/models/search\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {OPERATIONS_URL} from \"../constants/constants\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class OperationsService extends AbstractService<Operation> {\n\n    constructor(protected http: HttpClient) {\n        super(OPERATIONS_URL, http);\n    }\n\n    buildSearch() {\n        let search = new Search<Operation>(Operation);\n        search.pageSize = 10;\n        this.search = search;\n        return search;\n    }\n\n    getId(element: Operation) {\n        return element.uuid;\n    }\n\n\n}","import {EventEmitter, Injectable} from '@angular/core';\n\n@Injectable()\nexport class TopMenuService {\n\n\tpublic activateMenuEvent: EventEmitter<string> = new EventEmitter<string>();\n\n\tconstructor() {\n\t}\n\n\tpublic activateMenu(menu: string) {\n\t\tthis.activateMenuEvent.emit(menu);\n\t}\n\n}\n","import {AbstractService} from \"../commons/abstract-service\";\nimport {Workshift} from \"../models/workshift\";\nimport {Search} from \"../commons/models/search\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {WORKSHIFTS_URL} from \"../constants/constants\";\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class WorkshiftsService extends AbstractService<Workshift> {\n\n    constructor(protected http: HttpClient) {\n        super(WORKSHIFTS_URL, http);\n    }\n\n    buildSearch() {\n        let search = new Search<Workshift>(Workshift);\n        search.pageSize = 10;\n        this.search = search;\n        return search;\n    }\n\n    getId(element: Workshift) {\n        return element.uuid;\n    }\n\n\n}","import {Component, forwardRef, Input, OnInit} from \"@angular/core\";\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport * as numeral from \"numeral\";\n\n@Component({\n\tselector: 'integer-input',\n\ttemplate: `<input maxlength=\"{{_maxlength}}\" (blur)=\"onBlur()\" pInputText pattern=\"[0-9]*\"\n                      class=\"{{styleClass}}\" placeholder=\"{{placeholder}}\" [(ngModel)]=\"_numberout\">`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => IntegerInput),\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class IntegerInput implements OnInit, ControlValueAccessor {\n\n\t@Input() maxlength: number;\n\t@Input() styleClass: string;\n\t@Input() placeholder: string;\n\n\tpublic _numberout: string;\n\tprivate _numberin: number;\n\tprivate _onTouchedCallback: (_: any) => {};\n\tprivate _onChangeCallback: (_: any) => {};\n\n\tconstructor() {\n\t}\n\n\tngOnInit() {\n\t}\n\n\tprivate translateLocalMessages() {\n\t\tnumeral.locale('it');\n\t\tif (this._numberin != null) {\n\t\t\tthis._numberout = numeral(this._numberin).format('0');\n\t\t}\n\t}\n\n\tpublic onBlur() {\n\t\tif (!this._numberout) {\n\t\t\tthis._numberin = null;\n\t\t\tthis._onTouchedCallback(this._numberin);\n\t\t\tthis._onChangeCallback(this._numberin);\n\t\t} else {\n\t\t\tnumeral.locale('it');\n\t\t\tlet num = numeral(this._numberout);\n\t\t\tif (num) {\n\t\t\t\tlet nnum = num.value();\n\t\t\t\tthis._numberin = Math.round(nnum * 100) / 100;\n\t\t\t\tthis._numberout = numeral(this._numberin).format('0');\n\t\t\t\tthis._onTouchedCallback(this._numberin);\n\t\t\t\tthis._onChangeCallback(this._numberin);\n\t\t\t} else {\n\t\t\t\tthis._numberin = null;\n\t\t\t\tthis._numberout = null;\n\t\t\t\tthis._onTouchedCallback(this._numberin);\n\t\t\t\tthis._onChangeCallback(this._numberin);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteValue(value: any): void {\n\t\tthis._numberin = null;\n\t\tthis._numberout = null;\n\t\tif (value) {\n\t\t\tthis._numberin = value;\n\t\t\tnumeral.locale('en');\n\t\t\tconst num = numeral(this._numberin);\n\t\t\tnumeral.locale('it');\n\t\t\tthis._numberout = num.format('0');\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any) {\n\t\tthis._onChangeCallback = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis._onTouchedCallback = fn;\n\t}\n\n\tpublic get _maxlength(): number {\n\t\treturn (this.maxlength && this.maxlength > 0 ? this.maxlength : 10);\n\t}\n}","import {Router} from \"@angular/router\";\n\nexport function manageErrorCode(error, msgs?: any[], router?: Router): void {\n    if (error.status == 401) {\n        if (router) {\n            router.navigate(['/']);\n        } else {\n            if (msgs) {\n                msgs.push({severity: 'error', summary: 'Errore: ', detail: 'Non autorizzato'});\n            }\n        }\n    } else {\n        if (msgs) {\n            msgs.push({severity: 'error', summary: 'Errore: ', detail: error});\n        }\n    }\n}\n","import {Component, forwardRef, Input, OnInit} from \"@angular/core\";\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport * as numeral from \"numeral\";\n\n@Component({\n\tselector: 'number-input',\n\ttemplate: `<input maxlength=\"{{_maxlength}}\" (blur)=\"onBlur()\" pInputText pattern=\"[0-9.,]*\"\n                      class=\"{{styleClass}}\" placeholder=\"{{placeholder}}\" [(ngModel)]=\"_numberout\">`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => NumberInput),\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class NumberInput implements OnInit, ControlValueAccessor {\n\n\t@Input() maxlength: number;\n\t@Input() styleClass: string;\n\t@Input() placeholder: string;\n\n\tpublic _numberout: string;\n\tprivate _numberin: number;\n\tprivate _onTouchedCallback: (_: any) => {};\n\tprivate _onChangeCallback: (_: any) => {};\n\n\tconstructor() {\n\t}\n\n\tngOnInit() {\n\t}\n\n\tprivate translateLocalMessages() {\n\t\tnumeral.locale('it');\n\t\tif (this._numberin != null) {\n\t\t\tthis._numberout = numeral(this._numberin).format('0.00');\n\t\t}\n\t}\n\n\tpublic onBlur() {\n\t\tif (!this._numberout) {\n\t\t\tthis._numberin = null;\n\t\t\tthis._onTouchedCallback(this._numberin);\n\t\t\tthis._onChangeCallback(this._numberin);\n\t\t} else {\n\t\t\tnumeral.locale('it');\n\t\t\tlet num = numeral(this._numberout);\n\t\t\tif (num) {\n\t\t\t\tlet nnum = num.value();\n\t\t\t\tthis._numberin = Math.round(nnum * 100) / 100;\n\t\t\t\tthis._numberout = numeral(this._numberin).format('0.00');\n\t\t\t\tthis._onTouchedCallback(this._numberin);\n\t\t\t\tthis._onChangeCallback(this._numberin);\n\t\t\t} else {\n\t\t\t\tthis._numberin = null;\n\t\t\t\tthis._numberout = null;\n\t\t\t\tthis._onTouchedCallback(this._numberin);\n\t\t\t\tthis._onChangeCallback(this._numberin);\n\t\t\t}\n\t\t}\n\t}\n\n\twriteValue(value: any): void {\n\t\tthis._numberin = null;\n\t\tthis._numberout = null;\n\t\tif (value != null && value != undefined) {\n\t\t\tthis._numberin = value;\n\t\t\tnumeral.locale('en');\n\t\t\tconst num = numeral(this._numberin);\n\t\t\tnumeral.locale('it');\n\t\t\tthis._numberout = num.format('0.00');\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any) {\n\t\tthis._onChangeCallback = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis._onTouchedCallback = fn;\n\t}\n\n\tpublic get _maxlength(): number {\n\t\treturn (this.maxlength && this.maxlength > 0 ? this.maxlength : 10);\n\t}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}